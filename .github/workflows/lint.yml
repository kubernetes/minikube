name: Lint
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [ master ]

# Limit one unit test job running per PR/Branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  # For example, if you push multiple commits to a pull request in quick succession, only the latest workflow run will continue
  cancel-in-progress: true
env:
  GOPROXY: https://proxy.golang.org
  GO_VERSION: '1.24.0'
permissions:
  contents: read
jobs:
    Lint-:
        runs-on: ubuntu-22.04
        steps:
        - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
          with:
            go-version: ${{env.GO_VERSION}}
            cache: true      
        - name: Download Dependencies
          run: go mod download
        # needed because pkg/drivers/kvm/domain.go:28:2:
        - name: Install libvirt (Linux)
          if: runner.os == 'Linux'
          run: |
              sudo apt-get update              
              sudo apt-get install -y libvirt-dev
        - name: Lint
          timeout-minutes: 8
          env:
            TESTSUITE: lint
          run: make test
          continue-on-error: false
    Boilerplate:
        runs-on: ubuntu-22.04
        steps:
        - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
          with:
            go-version: ${{env.GO_VERSION}}
            cache: true  
        - name: Boilerplate check
          timeout-minutes: 2
          env:
            TESTSUITE: boilerplate
          run: make test
          continue-on-error: false
    Gomodtidy:
       runs-on: ubuntu-22.04
       steps:
        - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
          with:
            go-version: ${{env.GO_VERSION}}
            cache: true  
        - name: Verify gomod tidy
          timeout-minutes: 2
          continue-on-error: false
          run: |
            make gomodtidy
            if ! git diff --quiet; then
              echo "::error::Please run 'make gomodtidy' and commit the changes"
              echo "=== files ==="
              git diff --name-only
              echo "=== diff ==="
              git diff -
              exit 1
            fi

