{
	"\n\n": "\n\n",
	"\"'{{.minikube_addon}}' is not a valid minikube addon": "'{{.minikube_addon}}' 不是有效的 minikube 插件",
	"\"The '{{.minikube_addon}}' addon is disabled": "'{{.minikube_addon}}' 插件已被禁用",
	"\"minikube cache\" will be deprecated in upcoming versions, please switch to \"minikube image load\"": "\"minikube cache\" 将在即将发布的版本中弃用，请切换至 \"minikube image load\"",
	"\"{{.context}}\" context has been updated to point to {{.hostname}}:{{.port}}": "\"{{.context}}\" 上下文已更新，指向 {{.hostname}}:{{.port}}",
	"\"{{.machineName}}\" does not exist, nothing to stop": "\"{{.machineName}}\" 不存在，没有什么可供停止的",
	"\"{{.minikube_addon}}\" was successfully disabled": "已成功禁用 \"{{.minikube_addon}}\"",
	"\"{{.name}}\" cluster does not exist. Proceeding ahead with cleanup.": "\"{{.name}}\" 集群不存在，将继续清理",
	"\"{{.name}}\" profile does not exist": "“{{.name}}”配置文件不存在",
	"\"{{.name}}\" profile does not exist, trying anyways.": "“{{.name}}”配置文件不存在时，仍然会尝试",
	"\"{{.profile_name}}\" VM does not exist, nothing to stop": "\"{{.profile_name}}\" 虚拟机不存在，没有什么可供停止的",
	"\"{{.profile_name}}\" host does not exist, unable to show an IP": "\"{{.profile_name}}\" 主机不存在，无法显示其IP",
	"\"{{.profile_name}}\" stopped.": "\"{{.profile_name}}\" 已停止",
	"'none' driver does not support 'minikube docker-env' command": "'none' 驱动不支持 'minikube docker-env' 命令",
	"'none' driver does not support 'minikube mount' command": "'none' 驱动不支持 'minikube mount' 命令",
	"'none' driver does not support 'minikube podman-env' command": "'none' 驱动不支持 'minikube podman-env' 命令",
	"'none' driver does not support 'minikube ssh' command": "'none' 驱动不支持 'minikube ssh' 命令",
	"'none' driver does not support 'minikube ssh-host' command": "'none' 驱动不支持 'minikube ssh-host' 命令",
	"'{{.driver}}' driver reported an issue: {{.error}}": "'{{.driver}}' 驱动程序报告了一个问题： {{.error}}",
	"- \"minikube ssh\" to SSH into minikube's node.\n- \"minikube docker-env\" to point your docker-cli to the docker inside minikube.\n- \"minikube image\" to build images without docker.": "- 使用 \"minikube ssh\" 命令以 SSH 连接到 minikube 的节点。\n- 使用 \"minikube docker-env\" 命令将你的 docker-cli 配置为使用 minikube 中的 Docker。\n- 使用 \"minikube image\" 命令在不使用 Docker 的情况下构建镜像。",
	"- \"minikube ssh\" to SSH into minikube's node.\n- \"minikube image\" to build images without docker.": "- 使用 \"minikube ssh\" 命令以 SSH 连接到 minikube 的节点。\n- 使用 \"minikube image\" 命令在不使用 Docker 的情况下构建镜像。",
	"- \"minikube ssh\" to SSH into minikube's node.\n- \"minikube podman-env\" to point your podman-cli to the podman inside minikube.\n- \"minikube image\" to build images without docker.": "- 使用 \"minikube ssh\" 命令以 SSH 连接到 minikube 的节点。\n- 使用 \"minikube podman-env\" 命令将你的 podman-cli 配置为使用 minikube 中的 Podman。\n- 使用 \"minikube image\" 命令在不使用 Docker 的情况下构建镜像。",
	"- Delete and recreate minikube cluster\n\t\tminikube delete\n\t\tminikube start --driver={{.driver_name}}": "- 删除并重新创建 minikube 集群\n\t\tminikube delete\n\t\tminikube start --driver={{.driver_name}}",
	"- Docs https://docs.docker.com/docker-for-mac/#resources": "- 文档地址 https://docs.docker.com/docker-for-mac/#resources",
	"- Docs https://docs.docker.com/docker-for-windows/#resources": "- 文档地址 https://docs.docker.com/docker-for-windows/#resources",
	"- Ensure your {{.driver_name}} daemon has access to enough CPU/memory resources.": "- 确保你的 {{.driver_name}} 守护程序有权访问足够的 CPU 和内存资源。",
	"- Prune unused {{.driver_name}} images, volumes, networks and abandoned containers.\n\n\t\t\t\t{{.driver_name}} system prune --volumes": "- 清理未使用的 {{.driver_name}} 镜像、卷、网络和废弃的容器。\n\n\t\t\t\t使用 {{.driver_name}} system prune --volumes 命令",
	"- Restart your {{.driver_name}} service": "- 重启你的 {{.driver_name}} 服务",
	"--container-runtime must be set to \"containerd\" or \"cri-o\" for rootless": "--container-runtime 必须被设置为 \"containerd\" 或者 \"cri-o\" 以实现非 root 运行",
	"--kvm-numa-count range is 1-8": "--kvm-numa-count 取值范围为 1-8",
	"--network flag is only valid with the docker/podman and KVM drivers, it will be ignored": "--network 标识仅对 docker/podman 和 KVM 驱动程序有效，它将被忽略",
	"--network flag is only valid with the docker/podman, KVM and Qemu drivers, it will be ignored": "--network 标识仅对 docker/podman  KVM 和 Qemu 驱动程序有效，它将被忽略",
	"--network with QEMU must be 'builtin' or 'socket_vmnet'": "--network 参数与 QEMU 必须为 'builtin' 或 'socket_vmnet'",
	"--static-ip is only implemented on Docker and Podman drivers, flag will be ignored": "--static-ip 只在 Docker 和 Podman 驱动上实现，flag 将被忽略",
	"--static-ip overrides --subnet, --subnet will be ignored": "--static-ip 重写 --subnet，--subnet 将被忽略",
	"1) Recreate the cluster with Kubernetes {{.new}}, by running:\n\t  \n\t\t  minikube delete{{.profile}}\n\t\t  minikube start{{.profile}} --kubernetes-version={{.prefix}}{{.new}}\n\t  \n\t\t2) Create a second cluster with Kubernetes {{.new}}, by running:\n\t  \n\t\t  minikube start -p {{.suggestedName}} --kubernetes-version={{.prefix}}{{.new}}\n\t  \n\t\t3) Use the existing cluster at version Kubernetes {{.old}}, by running:\n\t  \n\t\t  minikube start{{.profile}} --kubernetes-version={{.prefix}}{{.old}}\n\t\t": "1) 使用以下命令使用 Kubernetes {{.new}} 重新创建集群：\n\t  \n\t\t  minikube delete{{.profile}}\n\t\t  minikube start{{.profile}} --kubernetes-version={{.prefix}}{{.new}}\n\t  \n\t\t2) 使用以下命令创建第二个具有 Kubernetes {{.new}} 的集群：\n\t  \n\t\t  minikube start -p {{.suggestedName}} --kubernetes-version={{.prefix}}{{.new}}\n\t  \n\t\t3) 使用以下命令使用现有的 Kubernetes {{.old}} 版本的集群：\n\t  \n\t\t  minikube start{{.profile}} --kubernetes-version={{.prefix}}{{.old}}",
	"1. Click on \"Docker for Desktop\" menu icon\n\t\t\t2. Click \"Preferences\"\n\t\t\t3. Click \"Resources\"\n\t\t\t4. Increase \"CPUs\" slider bar to 2 or higher\n\t\t\t5. Click \"Apply \u0026 Restart\"": "1. 点击 \"Docker for Desktop\" 菜单图标\n\t\t\t2. 点击 \"Preferences\"\n\t\t\t3. 点击 \"Resources\"\n\t\t\t4. 将 \"CPUs\" 滑动条调整到 2 或更高\n\t\t\t5. 点击 \"Apply \u0026 Restart\"",
	"1. Click on \"Docker for Desktop\" menu icon\n\t\t\t2. Click \"Preferences\"\n\t\t\t3. Click \"Resources\"\n\t\t\t4. Increase \"Memory\" slider bar to {{.recommend}} or higher\n\t\t\t5. Click \"Apply \u0026 Restart\"": "1. 点击 \"Docker for Desktop\" 菜单图标\n\t\t\t2. 点击 \"Preferences\"\n\t\t\t3. 点击 \"Resources\"\n\t\t\t4. 将 \"Memory\" 滑动条调整到 {{.recommend}} 或更高\n\t\t\t5. 点击 \"Apply \u0026 Restart\"",
	"1. Open the \"Docker Desktop\" menu by clicking the Docker icon in the system tray\n\t\t2. Click \"Settings\"\n\t\t3. Click \"Resources\"\n\t\t4. Increase \"CPUs\" slider bar to 2 or higher\n\t\t5. Click \"Apply \u0026 Restart\"": "1. 通过点击系统托盘中的 Docker 图标打开 \"Docker Desktop\" 菜单\n\t\t2. 点击 \"Settings\"\n\t\t3. 点击 \"Resources\"\n\t\t4. 将 \"CPUs\" 滑动条调整到 2 或更高\n\t\t5. 点击 \"Apply \u0026 Restart\"",
	"1. Open the \"Docker Desktop\" menu by clicking the Docker icon in the system tray\n\t\t2. Click \"Settings\"\n\t\t3. Click \"Resources\"\n\t\t4. Increase \"Memory\" slider bar to {{.recommend}} or higher\n\t\t5. Click \"Apply \u0026 Restart\"": "1. 通过点击系统托盘中的 Docker 图标打开 \"Docker Desktop\" 菜单\n\t\t2. 点击 \"Settings\"\n\t\t3. 点击 \"Resources\"\n\t\t4. 将 \"Memory\" 滑动条调整到 {{.recommend}} 或更高\n\t\t5. 点击 \"Apply \u0026 Restart\"",
	"==\u003e Audit \u003c==": "==\u003e 审计日志 \u003c==",
	"==\u003e Last Start \u003c==": "==\u003e 上次启动 \u003c==",
	"A VPN or firewall is interfering with HTTP access to the minikube VM. Alternatively, try a different VM driver: https://minikube.sigs.k8s.io/docs/start/": "VPN 或者防火墙正在干扰对 minikube 虚拟机的 HTTP 访问。或者，您可以使用其它的虚拟机驱动：https://minikube.sigs.k8s.io/docs/start/",
	"A firewall is blocking Docker the minikube VM from reaching the image repository. You may need to select --image-repository, or use a proxy.": "防火墙正在阻止 minikube 虚拟机中的 Docker 访问镜像仓库。您可能需要选择 --image-repository 或使用代理",
	"A firewall is blocking Docker the minikube VM from reaching the internet. You may need to configure it to use a proxy.": "防火墙正在阻止 minikube 虚拟机中的 Docker 访问互联网。您可能需要对其进行配置为使用代理",
	"A firewall is blocking Docker within the minikube VM from reaching the internet. You may need to configure it to use a proxy.": "防火墙正在阻止 minikube 虚拟机中的 Docker 访问互联网。您可能需要对其进行配置为使用代理",
	"A firewall is interfering with minikube's ability to make outgoing HTTPS requests. You may need to change the value of the HTTPS_PROXY environment variable.": "防火墙正在干扰 minikube 发送 HTTPS 请求的能力，您可能需要改变 HTTPS_PROXY 环境变量的值",
	"A firewall is likely blocking minikube from reaching the internet. You may need to configure minikube to use a proxy.": "防火墙可能会阻止 minikube 访问互联网。您可能需要将 minikube 配置为使用",
	"A set of apiserver IP Addresses which are used in the generated certificate for kubernetes.  This can be used if you want to make the apiserver available from outside the machine": "一组在为 kubernetes 生成的证书中使用的 apiserver IP 地址。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver IP 地址",
	"A set of apiserver IP Addresses which are used in the generated certificate for kubernetes. This can be used if you want to make the apiserver available from outside the machine": "一组在为 kubernetes 生成的证书中使用的 apiserver IP 地址。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver IP 地址",
	"A set of apiserver names which are used in the generated certificate for kubernetes.  This can be used if you want to make the apiserver available from outside the machine": "一组在为 kubernetes 生成的证书中使用的 apiserver 名称。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver 名称",
	"A set of apiserver names which are used in the generated certificate for kubernetes. This can be used if you want to make the apiserver available from outside the machine": "一组在为 kubernetes 生成的证书中使用的 apiserver 名称。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver 名称",
	"A set of key=value pairs that describe configuration that may be passed to different components.\nThe key should be '.' separated, and the first part before the dot is the component to apply the configuration to.\nValid components are: kubelet, kubeadm, apiserver, controller-manager, etcd, proxy, scheduler\nValid kubeadm parameters:": "一组用于描述可传递给不同组件的配置的键值对。\n其中键应以英文句点“.”分隔，英文句点前面的第一个部分是应用该配置的组件。\n有效组件包括：kubelet、kubeadm、apiserver、controller-manager、etcd、proxy、scheduler\n有效 kubeadm 参数包括：",
	"A set of key=value pairs that describe feature gates for alpha/experimental features.": "一组用于描述 alpha 版功能/实验性功能的功能限制的键值对。",
	"Access the Kubernetes dashboard running within the minikube cluster": "访问在 minikube 集群中运行的 kubernetes dashboard",
	"Access to ports below 1024 may fail on Windows with OpenSSH clients older than v8.1. For more information, see: https://minikube.sigs.k8s.io/docs/handbook/accessing/#access-to-ports-1024-on-windows-requires-root-permission": "在 Windows 上使用 v8.1以上版本的OpenSSH客户端，访问 1024 以下端口可能会失败。更多信息请参阅：https://minikube.sigs.k8s.io/docs/handbook/accessing/#access-to-ports-1024-on-windows-requires-root-permission",
	"Add SSH identity key to SSH authentication agent": "将SSH身份密钥添加到SSH身份验证代理",
	"Add an image into minikube as a local cache, or delete, reload the cached images": "将 image 作为本地缓存添加到 minikube 中，或删除、重新加载缓中的 images",
	"Add an image to local cache.": "将 image 添加到本地缓存。",
	"Add host key to SSH known_hosts file": "在SSH known_hosts文件中添加主机密钥",
	"Add image to cache for all running minikube clusters": "为所有正在运行的 minikube 集群添加镜像到缓存",
	"Add machine IP to NO_PROXY environment variable": "将机器IP添加到环境变量 NO_PROXY 中",
	"Add or delete an image from the local cache.": "在本地缓存中添加或删除 image。",
	"Add, remove, or list additional nodes": "添加，删除或者列出其他的节点",
	"Adding a control-plane node is not yet supported, setting control-plane flag to false": "不支持添加控制平面节点，将控制平面标志设置为false",
	"Adding a control-plane node to a non-HA (non-multi-control plane) cluster is not currently supported. Please first delete the cluster and use 'minikube start --ha' to create new one.": "目前不支持向非 HA（非多控制平面）集群添加控制平面节点。请先删除集群，然后使用“minikube start --ha”创建新集群。",
	"Adding node {{.name}} to cluster {{.cluster}}": "添加节点 {{.name}} 至集群 {{.cluster}}",
	"Adding node {{.name}} to cluster {{.cluster}} as {{.roles}}": "将节点 {{.name}} 作为 {{.roles}} 添加到集群 {{.cluster}}",
	"Additional help topics": "其他帮助",
	"Additional mount options, such as cache=fscache": "其他挂载选项，例如：cache=fscache",
	"Adds a node to the given cluster config, and starts it.": "将节点添加到给定的集群配置中，然后启动它",
	"Adds a node to the given cluster.": "将节点添加到给定的集群",
	"Advanced Commands:": "高级命令：",
	"After the addon is enabled, please run \"minikube tunnel\" and your ingress resources would be available at \"127.0.0.1\"": "插件启用后，请运行 \"minikube tunnel\" 您的 ingress 资源将在 \"127.0.0.1\"",
	"Aliases": "别名",
	"All existing scheduled stops cancelled": "取消所有已计划的停止",
	"Allow pods to use your GPUs. Options include: [all,nvidia,amd] (Docker driver with Docker container-runtime only)": "允许 pods 使用您的 GPUs。选项包括:[all,nvidia,amd](仅支持Docker容器运行时的Docker驱动程序)",
	"Allow user prompts for more information": "允许用户提示以获取更多信息",
	"Alternative image repository to pull docker images from. This can be used when you have limited access to gcr.io. Set it to \"auto\" to let minikube decide one for you. For Chinese mainland users, you may use local gcr.io mirrors such as registry.cn-hangzhou.aliyuncs.com/google_containers": "用于从中拉取 docker 镜像的备选镜像存储库。如果您对 gcr.io 的访问受到限制，则可以使用该镜像存储库。将镜像存储库设置为“auto”可让 minikube 为您选择一个存储库。对于中国大陆用户，您可以使用本地 gcr.io 镜像，例如 registry.cn-hangzhou.aliyuncs.com/google_containers",
	"Alternatively you could install one of these drivers:": "或者你也可以安装以下驱动程序：",
	"Amount of RAM allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g)": "为 minikube 虚拟机分配的 RAM 容量（格式：\u003c数字\u003e[\u003c单位\u003e]，其中单位 = b、k、m 或 g）",
	"Amount of RAM allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g).": "为 minikube 虚拟机分配的 RAM 容量（格式：\u003c数字\u003e[\u003c单位\u003e]，其中单位 = b、k、m 或 g）。",
	"Amount of RAM to allocate to Kubernetes (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g).": "为 Kubernetes 分配的 RAM 容量（格式：\u003c数字\u003e[\u003c单位\u003e]，其中单位 = b、k、m 或 g）。",
	"Amount of time to wait for a service in seconds": "等待服务的时间（单位秒）",
	"Amount of time to wait for service in seconds": "等待服务的时间（单位秒）",
	"Another hypervisor, such as VirtualBox, is conflicting with KVM. Please stop the other hypervisor, or use --driver to switch to it.": "另外一个管理程序与 KVM 产生了冲突，如 VirtualBox。请停止其他的管理程序,或者使用 --driver 切换到其他程序。",
	"Another hypervisor, such as VirtualBox, is conflicting with KVM. Please stop the other hypervisor, or use --vm-driver to switch to it.": "另外一个管理程序与 KVM 产生了冲突，如 VirtualBox。请停止其他的管理程序，或者使用 --vm-driver 切换到其他程序。",
	"Another minikube instance is downloading dependencies... ": "另一个 minikube 实例正在下载依赖项…",
	"Another program is using a file required by minikube. If you are using Hyper-V, try stopping the minikube VM from within the Hyper-V manager": "另一个程序正在使用 minikube 所需的文件。如果您正在使用 Hyper-V，请尝试从 Hyper-V 管理器中停止 minikube VM",
	"Another tunnel process is already running, terminate the existing instance to start a new one": "另一个隧道进程已在运行，请终止现有实例以启动新的实例",
	"At least needs control plane nodes to enable addon": "至少需要控制平面节点来启用插件",
	"Auto-pause is already enabled.": "自动暂停已经启用。",
	"Automatically selected the '{{.driver}}' driver": "自动选择 '{{.driver}}' 驱动",
	"Automatically selected the '{{.driver}}' driver (alternates: {{.alternates}})": "自动选择 '{{.driver}}' 驱动（可选项：{{.alternates}}）",
	"Automatically selected the {{.driver}} driver": "自动选择 {{.driver}} 驱动",
	"Automatically selected the {{.driver}} driver. Other choices: {{.alternates}}": "自动选择 {{.driver}} 驱动。其他选项：{{.alternates}}",
	"Automatically selected the {{.network}} network": "自动选择 {{.network}} 网络",
	"Available Commands": "可用命令",
	"Basic Commands:": "基本命令：",
	"Because you are using a Docker driver on {{.operating_system}}, the terminal needs to be open to run it.": "因为你正在使用 {{.operating_system}} 上的 Docker 驱动程序，所以需要打开终端才能运行它。",
	"Bind Address: {{.Address}}": "绑定地址：{{.Address}}",
	"Block until the apiserver is servicing API requests": "阻塞直到 apiserver 为 API 请求提供服务",
	"Booting up control plane ...": "正在启动控制平面...",
	"Both driver={{.driver}} and vm-driver={{.vmd}} have been set.\n\n    Since vm-driver is deprecated, minikube will default to driver={{.driver}}.\n\n    If vm-driver is set in the global config, please run \"minikube config unset vm-driver\" to resolve this warning.\n\t\t\t": "已设置 driver={{.driver}} 和 vm-driver={{.vmd}}。\n\n    由于 vm-driver 已弃用，minikube 将默认使用 driver={{.driver}}。\n\n    如果在全局配置中设置了 vm-driver，请运行 \"minikube config unset vm-driver\" 以解决此警告。",
	"Bridge CNI is incompatible with multi-node clusters, use a different CNI": "桥接 CNI 与多节点集群不兼容，请使用不同的 CNI",
	"Build a container image in minikube": "在 minikube 中构建一个容器镜像",
	"Build a container image, using the container runtime.": "使用容器运行时构建容器映像。",
	"Build image on all nodes.": "在所有节点上构建映像。",
	"CGroup allocation is not available in your environment, You might be running minikube in a nested container. Try running:\n\t\t\t\n\tminikube start --extra-config=kubelet.cgroups-per-qos=false --extra-config=kubelet.enforce-node-allocatable=\"\"\n\n\t\t\t\n\t\t\t": "您的环境中没有 CGroup 分配，您可能在嵌套容器中运行 minikube。尝试运行:\n\t\t\t\n\tminikube start --extra-config=kubelet.cgroups-per-qos=false --extra-config=kubelet.enforce-node-allocatable=\"\"\n\n\t\t\t\n\t\t\t",
	"CGroup allocation is not available in your environment. You might be running minikube in a nested container. Try running:\n\t\t\t\n\tminikube start --extra-config=kubelet.cgroups-per-qos=false --extra-config=kubelet.enforce-node-allocatable=\"\"\n\n\t\t\t\n\t\t\t": "你的环境中不支持 CGroup 分配。可能是因为你在嵌套容器中运行 minikube。尝试运行以下命令：\n\t\t\t\n\tminikube start --extra-config=kubelet.cgroups-per-qos=false --extra-config=kubelet.enforce-node-allocatable=\"\"\n\n\t\t\t\n\t\t\t",
	"CNI plug-in to use. Valid options: auto, bridge, calico, cilium, flannel, kindnet, or path to a CNI manifest (default: auto)": "使用 CNI 插件。可选包括：auto、bridge、calico、cilium、flannel、kindnet 或 CNI 配置清单的路径（默认值：auto）",
	"Cache image from docker daemon": "从 docker daemon 中缓存镜像",
	"Cache image from remote registry": "远程仓库中缓存镜像",
	"Cache image to docker daemon": "缓存镜像到 docker daemon",
	"Cache image to remote registry": "缓存镜像到远程仓库",
	"Cannot find directory {{.path}} for copy": "找不到用来复制的 {{.path}} 目录",
	"Cannot find directory {{.path}} for mount": "找不到用来挂载的 {{.path}} 目录",
	"Cannot use both --output and --format options": "不能同时使用 --output 和 --format 选项",
	"Cannot use the option --no-kubernetes on the {{.name}} driver": "无法使用 {{.name}} 驱动程序上的 -no-kubernetes 选项",
	"Certificate {{.certPath}} has expired. Generating a new one...": "证书 {{.certPath}} 已过期，生成一个新证书...",
	"Changing the API server port of an existing minikube HA (multi-control plane) cluster is not currently supported. Please first delete the cluster.": "目前不支持更改现有 minikube HA（多控制平面）集群的 API 服务器端口。请先删除集群。",
	"Changing the HA (multi-control plane) mode of an existing minikube cluster is not currently supported. Please first delete the cluster and use 'minikube start --ha' to create new one.": "目前不支持更改现有 minikube 集群的 HA（多控制平面）模式。请先删除该集群，然后使用 'minikube start --ha' 创建新集群。",
	"Check if you have unnecessary pods running by running 'kubectl get po -A": "通过运行 'kubectl get po -A' 检查是否有不必要的pod正在运行",
	"Check output of 'journalctl -xeu kubelet', try passing --extra-config=kubelet.cgroup-driver=systemd to minikube start": "检查 'journalctl -xeu kubelet' 的输出，尝试启动 minikube 时添加参数 --extra-config=kubelet.cgroup-driver=systemd",
	"Check that SELinux is disabled, and that the provided apiserver flags are valid": "检查 SELinux 是否禁用，且提供的 apiserver 标志是否有效",
	"Check that libvirt is setup properly": "检查 libvirt 是否正确设置",
	"Check that minikube is running and that you have specified the correct namespace (-n flag) if required.": "检测 minikube 是否正在运行，以及是否根据需要指定了正确的 namespace （-n 标志）",
	"Check that the provided apiserver flags are valid": "检查提供的 apiserver 标志是有效的",
	"Check that the provided apiserver flags are valid, and that SELinux is disabled": "检查提供的 apiserver 标志是有效的，且禁用了 SELinux",
	"Check that your --kubernetes-version has a leading 'v'. For example: 'v1.1.14'": "检测您的 --kubernetes-version 前面是否有 'v'， 例如：'v1.1.14",
	"Check that your apiserver flags are valid, or run 'minikube delete'": "请检查您的 apiserver 标志是否有效，或者允许 'minikube delete'",
	"Check your firewall rules for interference, and run 'virt-host-validate' to check for KVM configuration issues. If you are running minikube within a VM, consider using --driver=none": "检查防火墙规则是否有干扰，并运行 'virt-host-validate' 检查 KVM 配置问题。如果你在虚拟机中运行 minikube，请考虑使用 --driver=none",
	"Check your firewall rules for interference, and run 'virt-host-validate' to check for KVM configuration issues. If you are running minikube within a VM, consider using --vm-driver=none": "检查您的防火墙规则是否存在干扰，然后运行 'virt-host-validate' 以检查 KVM 配置问题，如果在虚拟机中运行minikube，请考虑使用 --vm-driver=none",
	"Choose a smaller value for --memory, such as 2000": "为 --memory 选择一个更小的值，例如 2000",
	"ChromeOS is missing the kernel support necessary for running Kubernetes": "ChromeOS 缺少运行 Kubernetes 所需的内核支持",
	"Cluster was created without any CNI, adding a node to it might cause broken networking.": "在没有任何 CNI 的情况下创建集群，向其中添加节点可能会导致网络中断。",
	"Configuration and Management Commands:": "配置和管理命令：",
	"Configure a default route on this Linux host, or use another --driver that does not require it": "为当前 Linux 主机配置一个默认的路由, 或者使用另一个不需要他的 --driver",
	"Configure a default route on this Linux host, or use another --vm-driver that does not require it": "为当前 Linux 主机配置一个默认的路由, 或者使用另一个不需要他的 --vm-driver",
	"Configure an external network switch following the official documentation, then add `--hyperv-virtual-switch=\u003cswitch-name\u003e` to `minikube start`": "根据官方文档配置外部网络交换机，然后添加 `--hyperv-virtual-switch=\u003cswitch-name\u003e` 到 `minikube start`",
	"Configure environment to use minikube's Docker daemon": "配置环境以使用 minikube's Docker daemon",
	"Configure environment to use minikube's Podman service": "配置环境以使用 minikube's Podman service",
	"Configures the addon w/ADDON_NAME within minikube (example: minikube addons configure registry-creds). For a list of available addons use: minikube addons list": "在 minikube 中配置插件 w/ADDON_NAME（例如：minikube addons configure registry-creds）。查看相关可用的插件列表，请使用：minikube addons list",
	"Configuring RBAC rules ...": "配置 RBAC 规则 ...",
	"Configuring environment for Kubernetes {{.k8sVersion}} on {{.runtime}} {{.runtimeVersion}}": "开始为Kubernetes {{.k8sVersion}}，{{.runtime}} {{.runtimeVersion}} 配置环境变量",
	"Configuring local host environment ...": "开始配置本地主机环境...",
	"Configuring {{.name}} (Container Networking Interface) ...": "配置 {{.name}} (Container Networking Interface) ...",
	"Confirm that you have a working internet connection and that your VM has not run out of resources by using: 'minikube logs'": "使用 'minikube logs' 确认您的互联网连接正常，并且您的虚拟机没有耗尽资源",
	"Confirm that you have supplied the correct value to --hyperv-virtual-switch using the 'Get-VMSwitch' command": "使用 'Get-VMSwitch' 命令确认已经为 --hyperv-virtual-switch 提供了正确的值",
	"Connect to LoadBalancer services": "连接到 LoadBalancer 服务",
	"Consider creating a cluster with larger memory size using `minikube start --memory SIZE_MB` ": "考虑使用`minikube start --memory SIZE_MB` 命令创建一个内存更大的集群",
	"Consider increasing Docker Desktop's memory size.": "考虑增加 Docker Desktop 的内存大小。",
	"Continuously listing/getting the status with optional interval duration.": "持续以可选的时间间隔连续列出/获取状态。",
	"Control Plane could not update, try minikube delete --all --purge": "无法更新控制平面，请尝试执行 minikube delete --all --purge",
	"Copy the specified file into minikube": "将指定的文件复制到 minikube",
	"Copy the specified file into minikube, it will be saved at path \u003ctarget file absolute path\u003e in your minikube.\nDefault target node controlplane and If \u003csource node name\u003e is omitted, It will trying to copy from host.\n\nExample Command : \"minikube cp a.txt /home/docker/b.txt\" +\n                  \"minikube cp a.txt minikube-m02:/home/docker/b.txt\"\n                  \"minikube cp minikube-m01:a.txt minikube-m02:/home/docker/b.txt\"": "将指定文件复制到 minikube，它将保存在 minikube 中的路径 \u003ctarget file absolute path\u003e。\n默认目标节点为 controlplane，如果省略 \u003csource node name\u003e，则会尝试从主机复制。\n\n示例命令：\"minikube cp a.txt /home/docker/b.txt\" +\n                  \"minikube cp a.txt minikube-m02:/home/docker/b.txt\"\n                  \"minikube cp minikube-m01:a.txt minikube-m02:/home/docker/b.txt\"",
	"Could not determine a Google Cloud project, which might be ok.": "无法确定 Google Cloud 项目，这可能是可以接受的。",
	"Could not find any GCP credentials. Either run `gcloud auth application-default login` or set the GOOGLE_APPLICATION_CREDENTIALS environment variable to the path of your credentials file.": "找不到任何 GCP 凭据。要么运行 `gcloud auth application-default login` 命令，要么将 GOOGLE_APPLICATION_CREDENTIALS 环境变量设置为凭据文件的路径。",
	"Could not get profile flag": "无法获取配置文件标志",
	"Could not process error from failed deletion": "无法处理删除失败的错误",
	"Could not process errors from failed deletion": "无法处理删除失败的错误",
	"Could not resolve IP address": "无法解析 IP 地址",
	"Country code of the image mirror to be used. Leave empty to use the global one. For Chinese mainland users, set it to cn.": "需要使用的镜像镜像的国家/地区代码。留空以使用全球代码。对于中国大陆用户，请将其设置为 cn。",
	"Create Highly Available Multi-Control Plane Cluster with a minimum of three control-plane nodes that will also be marked for work.": "创建高可用的多控制平面集群，其中至少包含三个控制平面节点，同时这些节点也做为工作节点。",
	"Created a new profile : {{.profile_name}}": "创建了新的配置文件：{{.profile_name}}",
	"Creating Kubernetes in {{.driver_name}} container with (CPUs={{.number_of_cpus}}), Memory={{.memory_size}}MB ({{.host_memory_size}}MB available) ...": "正在 {{.driver_name}} 容器中 创建 Kubernetes，(CPUs={{.number_of_cpus}}), 内存={{.memory_size}}MB ({{.host_memory_size}}MB 可用",
	"Creating a new profile failed": "创建新的配置文件失败",
	"Creating mount {{.name}} ...": "正在创建装载 {{.name}}…",
	"Creating {{.driver_name}} VM (CPUs={{.number_of_cpus}}, Memory={{.memory_size}}MB, Disk={{.disk_size}}MB) ...": "正在创建 {{.driver_name}} 虚拟机（CPUs={{.number_of_cpus}}，Memory={{.memory_size}}MB, Disk={{.disk_size}}MB）...",
	"Creating {{.driver_name}} {{.machine_type}} (CPUs={{.number_of_cpus}}, Memory={{.memory_size}}MB) ...": "正在创建 {{.driver_name}} {{.machine_type}}（CPUs={{.number_of_cpus}}，内存={{.memory_size}}MB）...",
	"Creating {{.driver_name}} {{.machine_type}} (CPUs={{.number_of_cpus}}, Memory={{.memory_size}}MB, Disk={{.disk_size}}MB) ...": "正在创建 {{.driver_name}} {{.machine_type}}（CPUs={{.number_of_cpus}}，内存={{.memory_size}}MB，磁盘={{.disk_size}}MB）...",
	"Creating {{.driver_name}} {{.machine_type}} (CPUs={{if not .number_of_cpus}}no-limit{{else}}{{.number_of_cpus}}{{end}}, Memory={{if not .memory_size}}no-limit{{else}}{{.memory_size}}MB{{end}}) ...": "创建 {{.driver_name}} {{.machine_type}}（CPU={{if not .number_of_cpus}}无限制{{else}}{{.number_of_cpus}}{{end}}，内存={{if not .memory_size}}无限制{{else}}{{.memory_size}}MB{{end}}）...",
	"Current context is \"{{.context}}\"": "当前的上下文为 \"{{.context}}\"",
	"DEPRECATED, use `driver` instead.": "已弃用，请改用 `driver`。",
	"DEPRECATED: Replaced by --cni": "已弃用，改用 --cni 来代替",
	"DEPRECATED: Replaced by --cni=bridge": "已弃用，改用 --cni=bridge",
	"Default group id used for the mount": "用于挂载默认的 group id",
	"Default user id used for the mount": "用于挂载默认的 user id",
	"Delete an image from the local cache.": "从本地缓存中删除 image。",
	"Delete the existing '{{.name}}' cluster using: '{{.delcommand}}', or start the existing '{{.name}}' cluster using: '{{.command}} --driver={{.old}}'": "使用 '{{.delcommand}}' 删除现有的 '{{.name}}' 集群，或使用 '{{.command}} --driver={{.old}}' 启动现有的 '{{.name}}' 集群",
	"Deletes a local Kubernetes cluster": "删除本地的 Kubernetes 集群",
	"Deletes a local Kubernetes cluster. This command deletes the VM, and removes all\nassociated files.": "删除本地 Kubernetes 集群。此命令还将删除虚拟机并移除所有\n相关文件。",
	"Deletes a local kubernetes cluster": "删除本地的 kubernetes 集群",
	"Deletes a local kubernetes cluster. This command deletes the VM, and removes all\nassociated files.": "删除本地的 kubernetes 集群。此命令还将删除虚拟机，并删除所有的\n相关文件",
	"Deletes a local kubernetes cluster. This command deletes the VM, and removes all associated files.": "删除本地 kubernetes 集群。此命令会删除虚拟机并移除所有关联的文件。",
	"Deletes a node from a cluster.": "从集群中删除节点。",
	"Deleting \"{{.profile_name}}\" in {{.driver_name}} ...": "正在删除 {{.driver_name}} 中的“{{.profile_name}}”…",
	"Deleting container \"{{.name}}\" ...": "正在删除容器 \"{{.name}}\" ...",
	"Deleting existing cluster {{.name}} with different driver {{.driver_name}} due to --delete-on-failure flag set by the user. ": "由于用户设置了 --delete-on-failure 标志，正在删除具有不同驱动程序 {{.driver_name}} 的现有集群 {{.name}}。",
	"Deleting node {{.name}} from cluster {{.cluster}}": "正在从集群 {{.cluster}} 中删除节点 {{.name}}",
	"Directory to output licenses to": "输出许可证的目录",
	"Disable checking for the availability of hardware virtualization before the vm is started (virtualbox driver only)": "禁用在启动虚拟机之前检查硬件虚拟化的可用性（仅限 virtualbox 驱动程序）",
	"Disable dynamic memory in your VM manager, or pass in a larger --memory value": "禁用虚拟机管理器中的动态内存，或者使用 --memory 传入更大的值",
	"Disables the addon w/ADDON_NAME within minikube (example: minikube addons disable dashboard). For a list of available addons use: minikube addons list": "在 minikube 中禁用插件 w/ADDON_NAME（例如：minikube addons disable dashboard）。查看相关可用的插件列表，请使用：minikube addons list",
	"Disables the addon w/ADDON_NAME within minikube (example: minikube addons disable dashboard). For a list of available addons use: minikube addons list ": "禁用 minikube 中的 ADDON_NAME 插件（示例：minikube addons disable dashboard）。要获取可用插件的列表，请使用 minikube addons list",
	"Disables the filesystem mounts provided by the hypervisors": "停用由管理程序提供的文件系统装载",
	"Disk size allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g)": "分配给 minikube 虚拟机的磁盘大小（格式：\u003c数字\u003e[\u003c单位\u003e]，其中单位 = b、k、m 或 g）",
	"Disk size allocated to the minikube VM (format: \u003cnumber\u003e[\u003cunit\u003e], where unit = b, k, m or g).": "分配给 minikube 虚拟机的磁盘大小（格式：\u003c数字\u003e[\u003c单位\u003e]，其中单位 = b、k、m 或 g）。",
	"Display dashboard URL instead of opening a browser": "显示 dashboard URL，而不是打开浏览器",
	"Display the Kubernetes addons URL in the CLI instead of opening it in the default browser": "在 CLI 中显示 Kubernetes 插件的 URL，而不是在默认浏览器中打开",
	"Display the Kubernetes service URL in the CLI instead of opening it in the default browser": "在 CLI 中显示 Kubernetes 服务的 URL，而不是在默认浏览器中打开",
	"Display the kubernetes addons URL in the CLI instead of opening it in the default browser": "在终端中显示 kubernetes 插件 URL，而不是在默认浏览器中打开它",
	"Display the kubernetes service URL in the CLI instead of opening it in the default browser": "在终端中显示 kubernetes 服务 URL，而不是在默认浏览器中打开它",
	"Display values currently set in the minikube config file": "显示当前在 minikube 配置文件中设置的值",
	"Display values currently set in the minikube config file.": "显示当前在 minikube 配置文件中设置的值。",
	"Docker Desktop has less than 2 CPUs configured, but Kubernetes requires at least 2 to be available": "Docker Desktop 少于 2 个 CPUs 可用, 但是 Kubernetes 需要至少 2 个 CPUs 可用",
	"Docker Desktop is configured for Windows containers, but Linux containers are required for minikube": "Docker Desktop 配置为 Windows 容器，但 minikube 需要 Linux 容器",
	"Docker Desktop only has {{.size}}MiB available, less than the required {{.req}}MiB for Kubernetes": "Docker Desktop 仅有 {{.size}}MiB 存储可用, 少于 Kubernetes 要求的 {{.req}}MiB",
	"Docker Desktop only has {{.size}}MiB available, you may encounter application deployment failures.": "Docker Desktop 只有 {{.size}}MiB 可用空间，你可能会遇到应用部署失败的问题。",
	"Docker container exited prematurely after it was created, consider investigating Docker's performance/health.": "Docker 容器在创建后过早退出，请考虑调查 Docker 的性能/健康状况。",
	"Docker has less than 2 CPUs available, but Kubernetes requires at least 2 to be available": "Docker 可用的 CPU 少于 2 个，但 Kubernetes 至少需要 2 个可用的 CPU",
	"Docker inside the VM is unavailable. Try running 'minikube delete' to reset the VM.": "虚拟机中的 Docker 不可用，尝试运行 'minikube delete' 来重置虚拟机。",
	"Docs have been saved at - {{.path}}": "文档已保存在 - {{.path}}",
	"Documentation: {{.url}}": "文档：{{.url}}",
	"Done! kubectl is now configured to use \"{{.name}}\"": "完成！kubectl 已经配置至 \"{{.name}}\"",
	"Done! kubectl is now configured to use \"{{.name}}\" cluster and \"{{.ns}}\" namespace by default": "完成！kubectl 现在已配置，默认使用\"{{.name}}\"集群和\"{{.ns}}\"命名空间",
	"Done! kubectl is now configured to use {{.name}}": "完成！kubectl已经配置至{{.name}}",
	"Done! minikube is ready without Kubernetes!": "完成！minikube 已准备就绪，无需 Kubernetes！",
	"Download complete!": "下载完成！",
	"Downloading Kubernetes {{.version}} preload ...": "正在下载 Kubernetes {{.version}} 的预加载文件...",
	"Downloading VM boot image ...": "正在下载 VM boot image...",
	"Downloading driver {{.driver}}:": "正在下载驱动 {{.driver}}:",
	"Downloading {{.name}} {{.version}}": "正在下载 {{.name}} {{.version}}",
	"Due to DNS issues your cluster may have problems starting and you may not be able to pull images\nMore details available at: https://minikube.sigs.k8s.io/docs/drivers/qemu/#known-issues": "由于 DNS 问题，你的集群可能在启动时遇到问题，你可能无法拉取镜像\n更多详细信息请参阅：https://minikube.sigs.k8s.io/docs/drivers/qemu/#known-issues",
	"Due to changes in macOS 13+ minikube doesn't currently support VirtualBox. You can use alternative drivers such as docker or {{.driver}}.\n    https://minikube.sigs.k8s.io/docs/drivers/docker/\n    https://minikube.sigs.k8s.io/docs/drivers/{{.driver}}/\n\n    For more details on the issue see: https://github.com/kubernetes/minikube/issues/15274\n": "由于 macOS 13+ 的变化，minikube 目前不支持 VirtualBox。你可以使用 docker 或 {{.driver}} 等替代驱动程序。\n    https://minikube.sigs.k8s.io/docs/drivers/docker/\n    https://minikube.sigs.k8s.io/docs/drivers/{{.driver}}/\n\n    有关此问题的更多详细信息，请参阅：https://github.com/kubernetes/minikube/issues/15274\n",
	"Duration of inactivity before the minikube VM is paused (default 1m0s)": "在 minikube 虚拟机暂停之前的不活动时间（默认为1分钟）",
	"Duration of inactivity before the minikube VM is paused (default 1m0s).  To disable, set to 0s": "在 minikube 虚拟机暂停之前的不活动时间（默认为1分钟）。要禁用，请设置为0秒。",
	"Duration until minikube certificate expiration, defaults to three years (26280h).": "minikube 证书有效期，默认为三年（26280小时）。",
	"ERROR creating `registry-creds-acr` secret": "创建 `registry-creds-acr` secret 时出错",
	"ERROR creating `registry-creds-dpr` secret": "创建 `registry-creds-dpr` secret 时出错",
	"ERROR creating `registry-creds-ecr` secret: {{.error}}": "创建 `registry-creds-ecr` secret 时出错：{{.error}}",
	"ERROR creating `registry-creds-gcr` secret: {{.error}}": "创建 `registry-creds-gcr` secret 时出错：{{.error}}",
	"Either systemctl is not installed, or Docker is broken. Run 'sudo systemctl start docker' and 'journalctl -u docker'": "未安装 systemctl 或者 Docker 损坏。请运行 'sudo systemctl start docker' 和 'journalctl -u docker'",
	"Enable addons. see `minikube addons list` for a list of valid addon names.": "启用插件。执行 `minikube addons list` 查看可用插件名称列表",
	"Enable experimental NVIDIA GPU support in minikube": "在 minikube 中启用实验性 NVIDIA GPU 支持",
	"Enable host resolver for NAT DNS requests (virtualbox driver only)": "为 NAT DNS 请求启用主机解析器（仅限 virtualbox 驱动程序）",
	"Enable istio needs {{.minMem}} MB of memory and {{.minCpus}} CPUs.": "启用 istio 需要至少 {{.minMem}} MB 内存 以及 {{.minCpus}} CPUs",
	"Enable or disable a minikube addon": "启用或禁用 minikube 插件",
	"Enable proxy for NAT DNS requests (virtualbox driver only)": "为 NAT DNS 请求启用代理（仅限 virtualbox 驱动程序）",
	"Enable the default CNI plugin (/etc/cni/net.d/k8s.conf). Used in conjunction with \\\"--network-plugin=cni\\": "启用默认 CNI 插件 (/etc/cni/net.d/k8s.conf)。与“--network-plugin=cni”结合使用",
	"Enable the default CNI plugin (/etc/cni/net.d/k8s.conf). Used in conjunction with \\\"--network-plugin=cni\\\".": "启用默认 CNI 插件 (/etc/cni/net.d/k8s.conf)。与“--network-plugin=cni”结合使用。",
	"Enabled addons: {{.addons}}": "启用插件： {{.addons}}",
	"Enables the addon w/ADDON_NAME within minikube (example: minikube addons enable dashboard). For a list of available addons use: minikube addons list": "启动 minikube 插件 w/ADDON_NAME（例如：minikube addons enable dashboard）。查看相关可用的插件列表，请使用：minikube addons list",
	"Enables the addon w/ADDON_NAME within minikube. For a list of available addons use: minikube addons list ": "在 minikube 中启用 ADDON_NAME 插件。要获取可用插件的列表，请使用 minikube addons list",
	"Enabling '{{.name}}' returned an error: {{.error}}": "启用 '{{.name}}' 返回了错误: {{.error}}",
	"Enabling dashboard ...": "正在开启 dashboard ...",
	"Ensure that CRI-O is installed and healthy: Run 'sudo systemctl start crio' and 'journalctl -u crio'. Alternatively, use --container-runtime=docker": "确保 CRI-O 已安装且正常运行：执行 'sudo systemctl start crio' and 'journalctl -u crio'。或者使用 --container-runtime=docker",
	"Ensure that Docker is installed and healthy: Run 'sudo systemctl start docker' and 'journalctl -u docker'. Alternatively, select another value for --driver": "确保 Docker 已安装并处于健康状态：运行 'sudo systemctl start docker' 和 'journalctl -u docker'。或者，选择另一个 --driver 的值",
	"Ensure that Docker is installed and healthy: Run 'sudo systemctl start docker' and 'journalctl -u docker'. Alternatively, select another value for --vm-driver": "确保 Docker 已安装且正常运行： 执行 'sudo systemctl start docker' and 'journalctl -u docker'。或者为 --vm-driver 指定另外的值",
	"Ensure that the required 'pids' cgroup is enabled on your host: grep pids /proc/cgroups": "确保你的主机上已启用所需的 'pids' cgroup：grep pids /proc/cgroups",
	"Ensure that the user listed in /etc/libvirt/qemu.conf has access to your home directory": "确保 /etc/libvirt/qemu.conf 中列出的用户具备访问您 home 目录的权限",
	"Ensure that you are a member of the appropriate libvirt group (remember to relogin for group changes to take effect!)": "确保你是适当的 libvirt 组的成员（记得重新登录以使组更改生效！）",
	"Ensure that your value for HTTPS_PROXY points to an HTTPS proxy rather than an HTTP proxy": "确保您配置的 HTTPS_PROXY 指向了 HTTPS 代理而不是 HTTP 代理",
	"Ensure the tmp directory path is writable to the current user.": "确保当前用户可以写入 tmp 目录路径。",
	"Ensure you have at least 20GB of free disk space.": "确保你至少有 20GB 的可用磁盘空间。",
	"Ensure your {{.driver_name}} is running and is healthy.": "确保你的 {{.driver_name}} 正在运行且处于健康状态。",
	"Environment variables to pass to the Docker daemon. (format: key=value)": "传递给 Docker 守护进程的环境变量。（格式：键值对）",
	"Environment variables to pass to the build. (format: key=value)": "传递给构建过程的环境变量。（格式为：key=value）",
	"Error checking driver version: {{.error}}": "检查驱动程序版本时出错：{{.error}}",
	"Error code docs have been saved at - {{.path}}": "错误代码文档已保存在 - {{.path}}",
	"Error converting status to json": "转换状态为 json 时出错",
	"Error creating list template": "创建 list template 时出错",
	"Error creating minikube directory": "创建 minikube 目录时出错",
	"Error creating status template": "创建 status template 时出错",
	"Error creating view template": "创建 view template 时出错",
	"Error detecting shell": "检测 shell 时发生错误",
	"Error executing list template": "执行 list template 时出错",
	"Error executing status template": "执行 status template 时出错",
	"Error executing template": "执行 template 时出错",
	"Error executing view template": "执行 view template 时出错",
	"Error finding port for mount": "查找 mount 端口时出错",
	"Error generating set output": "生成设定输出时出错",
	"Error generating unset output": "生成取消设定输出时出错",
	"Error getting IP": "获取 IP 时出错",
	"Error getting addons status": "获取插件状态时出错",
	"Error getting bootstrapper": "获取 bootstrapper 时出错",
	"Error getting client": "获取 client 时出错",
	"Error getting client: {{.error}}": "获取 client 时出错：{{.error}}",
	"Error getting cluster": "获取 cluster 时出错",
	"Error getting cluster bootstrapper": "获取 cluster bootstrapper 时出错",
	"Error getting cluster config": "获取 cluster config 时出错",
	"Error getting config": "获取 config 时出错",
	"Error getting control-plane node": "获取 control-plane node 时出错",
	"Error getting host": "获取 host 时出错",
	"Error getting host status": "获取 host status 时出错",
	"Error getting machine logs": "获取 machine logs 时出错",
	"Error getting machine status": "获取 machine status 时出错",
	"Error getting port binding for '{{.driver_name}} driver: {{.error}}": "获取 '{{.driver_name}}' 驱动程序的端口绑定时出错：{{.error}}",
	"Error getting primary control plane": "获取主控制平面时出错",
	"Error getting profiles to delete": "获取待删除配置文件时出错",
	"Error getting service status": "获取 service status 时出错",
	"Error getting service with namespace: {{.namespace}} and labels {{.labelName}}:{{.addonName}}: {{.error}}": "使用 namespace: {{.namespace}} 和 labels {{.labelName}}:{{.addonName}} 获取 service 时出错：{{.error}}",
	"Error getting ssh client": "获取 ssh 客户端时出错",
	"Error getting the host IP address to use from within the VM": "从虚拟机中获取 host IP 地址时出错",
	"Error killing mount process": "杀死 mount 进程时出错",
	"Error loading api": "加载 api 时出错",
	"Error loading profile config": "加载配置文件的配置时出错",
	"Error loading profile config: {{.error}}": "加载配置文件的配置时出错：{{.error}}",
	"Error loading profile {{.name}}: {{.error}}": "加载配置文件 {{.name}} 时出错：{{.error}}",
	"Error opening service": "开启 service 时出错",
	"Error parsing Driver version: {{.error}}": "解析 Driver 版本时出错：{{.error}}",
	"Error parsing minikube version: {{.error}}": "解析 minikube 版本时出错：{{.error}}",
	"Error parsing {{.name}}={{.value}}, {{.err}}": "解析 {{.name}}={{.value}} 时出错，{{.err}}",
	"Error reading {{.path}}: {{.error}}": "读取 {{.path}} 时出错：{{.error}}",
	"Error restarting cluster": "重启 cluster 时出错",
	"Error setting shell variables": "设置 shell 变量时出错",
	"Error starting cluster": "开启 cluster 时出错",
	"Error starting mount": "开启 mount 时出错",
	"Error unsetting shell variables": "取消设置 shell 变量时出错",
	"Error while setting kubectl current context :  {{.error}}": "设置 kubectl 上下文时出错 ：{{.error}}",
	"Error while setting kubectl current context:  {{.error}}": "设置 kubectl 上下文时出错：{{.error}}",
	"Error with ssh-add": "ssh-add 出错",
	"Error writing mount pid": "写入 mount pid 时出错",
	"Error: You have selected Kubernetes v{{.new}}, but the existing cluster for your profile is running Kubernetes v{{.old}}. Non-destructive downgrades are not supported, but you can proceed by performing one of the following options:\n\n* Recreate the cluster using Kubernetes v{{.new}}: Run \"minikube delete {{.profile}}\", then \"minikube start {{.profile}} --kubernetes-version={{.new}}\"\n* Create a second cluster with Kubernetes v{{.new}}: Run \"minikube start -p \u003cnew name\u003e --kubernetes-version={{.new}}\"\n* Reuse the existing cluster with Kubernetes v{{.old}} or newer: Run \"minikube start {{.profile}} --kubernetes-version={{.old}}\"": "错误：您已选择 Kubernetes v{{.new}}，但您的配置文件的现有集群正在运行 Kubernetes v{{.old}}。非破坏性降级不受支持，但若要继续操作，您可以执行以下选项之一：\n\n* 使用 Kubernetes v{{.new}} 重新创建现有集群：运行“minikube delete {{.profile}}”，然后运行“minikube start {{.profile}} --kubernetes-version={{.new}}”\n* 使用 Kubernetes v{{.new}} 再创建一个集群：运行“minikube start -p \u003cnew name\u003e --kubernetes-version={{.new}}”\n* 通过 Kubernetes v{{.old}} 或更高版本重复使用现有集群：运行“minikube start {{.profile}} --kubernetes-version={{.old}}”",
	"Error: You have selected Kubernetes v{{.new}}, but the existing cluster for your profile is running Kubernetes v{{.old}}. Non-destructive downgrades are not supported, but you can proceed by performing one of the following options:\n* Recreate the cluster using Kubernetes v{{.new}}: Run \"minikube delete {{.profile}}\", then \"minikube start {{.profile}} --kubernetes-version={{.new}}\"\n* Create a second cluster with Kubernetes v{{.new}}: Run \"minikube start -p \u003cnew name\u003e --kubernetes-version={{.new}}\"\n* Reuse the existing cluster with Kubernetes v{{.old}} or newer: Run \"minikube start {{.profile}} --kubernetes-version={{.old}}": "错误：您已选择 Kubernetes v{{.new}}，但您的配置文件的现有集群正在运行 Kubernetes v{{.old}}。非破坏性降级不受支持，但若要继续操作，您可以执行以下选项之一：\n* 使用 Kubernetes v{{.new}} 重新创建现有集群：运行“minikube delete {{.profile}}”，然后运行“minikube start {{.profile}} --kubernetes-version={{.new}}”\n* 使用 Kubernetes v{{.new}} 再创建一个集群：运行“minikube start -p \u003cnew name\u003e --kubernetes-version={{.new}}”\n* 通过 Kubernetes v{{.old}} 或更高版本重复使用现有集群：运行“minikube start {{.profile}} --kubernetes-version={{.old}}”",
	"Error: [{{.id}}] {{.error}}": "错误：[{{.id}}] {{.error}}",
	"Examples": "示例",
	"Executing \"{{.command}}\" took an unusually long time: {{.duration}}": "执行 \"{{.command}}\" 花费了异常长的时间：{{.duration}}",
	"Existing disk is missing new features ({{.error}}). To upgrade, run 'minikube delete'": "现有磁盘缺少新功能（{{.error}}）。要升级，请运行 'minikube delete'",
	"Exiting": "正在退出",
	"Exiting due to driver incompatibility": "由于驱动程序不兼容而退出",
	"Exiting due to {{.fatal_code}}: {{.fatal_msg}}": "因 {{.fatal_code}} 错误而退出：{{.fatal_msg}}",
	"Exiting.": "正在退出。",
	"Exposed port of the proxyfied dashboard. Set to 0 to pick a random port.": "代理 dashboard 的暴露端口。设置为 0 将选择一个随机端口。",
	"External Adapter on which external switch will be created if no external switch is found. (hyperv driver only)": "如果找不到外部交换机，将在外部适配器上创建外部交换机。（仅适用于 hyperv 驱动程序）",
	"Fail check if container paused": "如果容器已挂起，则检查失败",
	"Failed removing pid from pidfile: {{.error}}": "从 pidfile 中删除 pid 失败：{{.error}}",
	"Failed runtime": "运行时失败",
	"Failed to build image": "构建镜像失败",
	"Failed to cache ISO": "缓存ISO 时失败",
	"Failed to cache and load images": "缓存以及导入镜像失败",
	"Failed to cache binaries": "缓存二进制文件失败",
	"Failed to cache images": "缓存镜像时失败",
	"Failed to cache images to tar": "缓存镜像到 tar 压缩包时出错",
	"Failed to cache kubectl": "缓存 kubectl 失败",
	"Failed to change permissions for {{.minikube_dir_path}}: {{.error}}": "未能更改 {{.minikube_dir_path}} 的权限：{{.error}}",
	"Failed to check if machine exists": "无法检测机器是否存在",
	"Failed to check main repository and mirrors for images": "无法检查主仓库和镜像的图像",
	"Failed to check main repository and mirrors for images for images": "无法检测主仓库和镜像仓库中的镜像",
	"Failed to configure auto-pause {{.profile}}": "配置自动暂停 {{.profile}} 失败",
	"Failed to configure metallb IP {{.profile}}": "配置 metallb IP {{.profile}} 失败",
	"Failed to configure registry-aliases {{.profile}}": "配置 registry-aliases {{.profile}} 失败",
	"Failed to create file": "文件创建失败",
	"Failed to create runtime": "运行时创建失败",
	"Failed to delete cluster {{.name}}, proceeding with retry anyway.": "删除集群 {{.name}} 失败，仍然进行重试。",
	"Failed to delete cluster {{.name}}.": "删除集群 {{.name}} 失败。",
	"Failed to delete cluster: {{.error}}": "未能删除集群：{{.error}}",
	"Failed to delete cluster: {{.error}}__1": "未能删除集群：{{.error}}",
	"Failed to delete images": "删除镜像时失败",
	"Failed to delete images from config": "无法删除配置的镜像",
	"Failed to delete profile(s): {{.error}}": "删除配置文件失败：{{.error}}",
	"Failed to download kubectl": "下载 kubectl 失败",
	"Failed to download licenses": "licenses 下载失败",
	"Failed to enable container runtime": "容器运行时启用失败",
	"Failed to extract integer in minutes to pause.": "无法提取要用于暂停的分钟数。",
	"Failed to generate config": "无法生成配置",
	"Failed to get bootstrapper": "获取 bootstrapper 失败",
	"Failed to get command runner": "获取命令运行程序失败",
	"Failed to get driver URL": "获取 driver URL 失败",
	"Failed to get image map": "获取镜像映射失败",
	"Failed to get service URL - check that minikube is running and that you have specified the correct namespace (-n flag) if required: {{.error}}": "获取服务 URL 失败 - 请检查 minikube 是否正在运行，并确保已经指定了正确的命名空间（如果需要，请使用 -n 标志）：{{.error}}",
	"Failed to get service URL: {{.error}}": "获取 service URL 失败：{{.error}}",
	"Failed to get temp": "获取临时目录失败",
	"Failed to kill mount process: {{.error}}": "未能终止装载进程：{{.error}}",
	"Failed to list cached images": "无法列出缓存镜像",
	"Failed to list images": "列出镜像失败",
	"Failed to load image": "加载镜像失败",
	"Failed to persist images": "持久化镜像失败",
	"Failed to pull image": "拉取镜像失败",
	"Failed to pull images": "拉取镜像失败",
	"Failed to push images": "推送镜像失败",
	"Failed to read temp": "无法读取临时文件",
	"Failed to reload cached images": "重新加载缓存镜像失败",
	"Failed to remove image": "删除镜像失败",
	"Failed to remove images for profile {{.pName}} {{.error}}": "删除配置文件镜像失败 {{.pName}} {{.error}}",
	"Failed to remove profile": "无法删除配置文件",
	"Failed to save config": "无法保存配置",
	"Failed to save config {{.profile}}": "无法保存配置 {{.profile}}",
	"Failed to save dir": "保存目录失败",
	"Failed to save image": "无法保存镜像",
	"Failed to save stdin": "保存标准输入失败",
	"Failed to set NO_PROXY Env. Please use `export NO_PROXY=$NO_PROXY,{{.ip}}": "未能设置 NO_PROXY 环境变量。请使用“export NO_PROXY=$NO_PROXY,{{.ip}}”",
	"Failed to set NO_PROXY Env. Please use `export NO_PROXY=$NO_PROXY,{{.ip}}`.": "未能设置 NO_PROXY 环境变量。请使用“export NO_PROXY=$NO_PROXY,{{.ip}}”。",
	"Failed to setup certs": "设置 certs 失败",
	"Failed to setup kubeconfig": "设置 kubeconfig 失败",
	"Failed to start container runtime": "容器运行时启动失败",
	"Failed to start {{.driver}} {{.driver_type}}. Running \"{{.cmd}}\" may fix it: {{.error}}": "启动 {{.driver}} {{.driver_type}} 失败。运行 \"{{.cmd}}\" 可能需要修复它： {{.error}} ",
	"Failed to stop node {{.name}}": "停止节点 {{.name}} 失败",
	"Failed to stop node {{.name}}: {{.error}}": "停止节点 {{.name}} 失败：{{.error}}",
	"Failed to stop ssh-agent process: {{.error}}": "停止 ssh-agent 程序失败：{{.error}}",
	"Failed to tag images": "无法打标签给镜像",
	"Failed to update cluster": "更新 cluster 失败",
	"Failed to update config": "更新 config 失败",
	"Failed unmount: {{.error}}": "unmount 失败：{{.error}}",
	"Failing to connect to {{.curlTarget}} from inside the minikube {{.type}}": "从 Minikube 的 {{.type}} 内部连接到 {{.curlTarget}} 失败",
	"File permissions used for the mount": "用于 mount 的文件权限",
	"Filter to use only VM Drivers": "仅用于 VM 驱动程序的筛选器",
	"Flags": "标志",
	"Follow": "跟踪",
	"For an improved experience it's recommended to use Docker Engine instead of Docker Desktop.\nDocker Engine installation instructions: https://docs.docker.com/engine/install/#server": "为获得更好的体验，建议使用 Docker Engine 替代 Docker Desktop。\nDocker Engine 安装说明：https://docs.docker.com/engine/install/#server",
	"For best results, install kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl/": "为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/",
	"For best results, install kubectl: https://kubernetes.io/docs/tasks/tools/install-kubectl/__1": "为获得最佳结果，请安装 kubectl：https://kubernetes.io/docs/tasks/tools/install-kubectl/",
	"For improved {{.driver}} performance, {{.fix}}": "为了提高 {{.driver}} 驱动的性能，{{.fix}}",
	"For more information see: https://minikube.sigs.k8s.io/docs/drivers/{{.driver}}": "更多信息，请参阅 https://minikube.sigs.k8s.io/docs/drivers/{{.driver}}",
	"For more information, see:": "更多信息，请参阅：",
	"For more information, see: https://minikube.sigs.k8s.io/docs/reference/drivers/none/": "更多信息，请参阅：https://minikube.sigs.k8s.io/docs/reference/drivers/none/",
	"For more information, see: {{.url}}": "更多信息，请参阅：{{.url}}",
	"Force environment to be configured for a specified shell: [fish, cmd, powershell, tcsh, bash, zsh], default is auto-detect": "强制为指定的 shell 配置环境：[fish, cmd, powershell, tcsh, bash, zsh]，默认为 auto-detect",
	"Force minikube to perform possibly dangerous operations": "强制 minikube 执行可能有风险的操作",
	"Format output. One of: short|table|json|yaml": "格式化输出。可选值为：short、table、json、yaml",
	"Format to print stdout in. Options include: [text,json]": "标准输出的格式。可选项包括：[text,json]",
	"Forwards all services in a namespace (defaults to \"false\")": "转发命名空间中的所有服务（默认为\"false\"）",
	"Found docker, but the docker service isn't running. Try restarting the docker service.": "找到 Docker，但 Docker 服务没有运行。尝试重新启动 Docker 服务。",
	"Found driver(s) but none were healthy. See above for suggestions how to fix installed drivers.": "找到个驱动程序，但没有一个是健康的。有关如何修复已安装的驱动程序的建议，请参阅上文。",
	"Found network options:": "找到的网络选项：",
	"Found {{.number}} invalid profile(s) !": "找到 {{.number}} 个无效的配置文件！",
	"Found {{.number}} invalid profile(s) ! ": "找到 {{.number}} 个无效的配置文件！",
	"Generate command completion for PowerShell.": "生成命令补全的 PowerShell 脚本。",
	"Generate command completion for a shell": "生成命令补全的 shell 脚本",
	"Generate command completion for bash.": "生成命令补全的 bash 脚本。",
	"Generate command completion for fish .": "生成命令补全的 fish 脚本。",
	"Generate command completion for zsh.": "生成命令补全的 zsh 脚本。",
	"Generate unable to parse disk size '{{.diskSize}}': {{.error}}": "无法生成解析磁盘大小 '{{.diskSize}}': {{.error}}",
	"Generate unable to parse memory '{{.memory}}': {{.error}}": "无法生成解析内存 '{{.memory}}': {{.error}}",
	"Generating certificates and keys ...": "正在生成证书和密钥...",
	"Get or list the current profiles (clusters)": "获取或列出当前配置文件（集群）",
	"Gets the kubernetes URL(s) for the specified service in your local cluster": "获取本地集群中指定服务的 kubernetes URL",
	"Gets the kubernetes URL(s) for the specified service in your local cluster. In the case of multiple URLs they will be printed one at a time.": "获取本地集群中指定服务的 kubernetes URL。如果有多个 URL，他们将一次打印一个",
	"Gets the logs of the running instance, used for debugging minikube, not user code.": "获取正在运行的实例日志，用于调试 minikube，不是用户代码",
	"Gets the status of a local Kubernetes cluster": "获取本地 Kubernetes 集群状态",
	"Gets the status of a local Kubernetes cluster.\n\tExit status contains the status of minikube's VM, cluster and Kubernetes encoded on it's bits in this order from right to left.\n\tEg: 7 meaning: 1 (for minikube NOK) + 2 (for cluster NOK) + 4 (for Kubernetes NOK)": "获取本地 Kubernetes 集群的状态。\n\t退出状态包含了 minikube 的虚拟机、集群和 Kubernetes 状态的编码，从右到左依次表示。\n\t例如：7 表示：1（表示 minikube 不正常）+ 2（表示集群不正常）+ 4（表示 Kubernetes 不正常）",
	"Gets the status of a local kubernetes cluster": "获取本地 kubernetes 集群状态",
	"Gets the value of PROPERTY_NAME from the minikube config file": "从 minikube 配置文件中获取 PROPERTY_NAME 的值",
	"Getting machine config failed": "获取机器配置失败",
	"Global Flags": "全局标识",
	"Go template format string for the cache list output.  The format for Go templates can be found here: https://pkg.go.dev/text/template\nFor the list of accessible variables for the template, see the struct values here: https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd#CacheListTemplate": "用于缓存列表输出的 Go 模板格式字符串。Go 模板的格式可以在此处找到：https://pkg.go.dev/text/template\n有关模板中可访问的变量列表，请参见此处的结构值：https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd#CacheListTemplate",
	"Go template format string for the config view output.  The format for Go templates can be found here: https://pkg.go.dev/text/template\nFor the list of accessible variables for the template, see the struct values here: https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd/config#ConfigViewTemplate": "Go模板格式字符串，用于配置视图输出。Go模板的格式可以在此链接找到：https://pkg.go.dev/text/template\n要查看模板中可访问的变量列表，请参见此链接中的结构值：https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd/config#ConfigViewTemplate",
	"Go template format string for the status output.  The format for Go templates can be found here: https://pkg.go.dev/text/template\nFor the list accessible variables for the template, see the struct values here: https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd#Status": "状态输出的 Go 模板格式字符串。Go 模板的格式可以在此处找到：https://pkg.go.dev/text/template\n关于模板中可访问的变量列表，请参阅此处的定义：https://pkg.go.dev/k8s.io/minikube/cmd/minikube/cmd#Status",
	"Group ID:     {{.groupID}}": "组 ID：{{.groupID}}",
	"HA (multi-control plane) clusters require 3 or more control-plane nodes": "HA（多控制平面）集群需要 3 个或更多控制平面节点",
	"Headlamp can display more detailed information when metrics-server is installed. To install it, run:\n\n\tminikube{{.profileArg}} addons enable metrics-server\n": "Headlamp 在安装了 metrics-server 后可以显示更详细的信息。要安装它，请运行：\n\n\tminikube{{.profileArg}} addons enable metrics-server\n\n",
	"Headlamp can display more detailed information when metrics-server is installed. To install it, run:\n\nminikube{{.profileArg}} addons enable metrics-server\t\n\n": "安装metrics-server后，Headlamp可以显示更详细的信息。 要安装它，请运行：\n\nminikube{{.profileArg}} addons enable metrics-server\t\n\n",
	"Hide the hypervisor signature from the guest in minikube (kvm2 driver only)": "向 minikube 中的访客隐藏管理程序签名（仅限 kvm2 驱动程序）",
	"Hyper-V requires that memory MB be an even number, {{.memory}}MB was specified, try passing `--memory {{.suggestMemory}}`": "Hyper-V 要求内存的 MB 值是偶数，{{.memory}}MB 被指定，尝试传递 `--memory {{.suggestMemory}}`",
	"Hyperkit is broken. Upgrade to the latest hyperkit version and/or Docker for Desktop. Alternatively, you may choose an alternate --driver": "Hyperkit 已损坏。升级到最新的 hyperkit 版本以及/或者 Docker 桌面版。或者，你可以通过 --driver 切换其他选项",
	"Hyperkit is broken. Upgrade to the latest hyperkit version and/or Docker for Desktop. Alternatively, you may choose an alternate --vm-driver": "Hyperkit 已损坏。升级到最新的 hyperkit 版本以及/或者 Docker 桌面版。或者，你可以通过 --vm-driver 切换其他选项",
	"Hyperkit networking is broken. Try disabling Internet Sharing: System Preference \u003e Sharing \u003e Internet Sharing. \nAlternatively, you can try upgrading to the latest hyperkit version, or using an alternate driver.": "Hyperkit 网络已损坏。 尝试禁用 Internet 共享：系统偏好设置 \u003e 共享 \u003e Internet 共享。\n 或者，您可以尝试升级到最新的 hyperkit 版本，或使用备用驱动程序。",
	"Hyperkit networking is broken. Upgrade to the latest hyperkit version and/or Docker for Desktop. Alternatively, you may choose an alternate --vm-driver": "Hyperkit 网络已损坏。升级到最新的 hyperkit 版本以及/或者 Docker 桌面版。或者，你可以通过 --vm-driver 切换其他选项",
	"IP Address to use to expose ports (docker and podman driver only)": "用于暴露端口的IP地址（仅适用于docker和podman驱动程序）",
	"IP address (ssh driver only)": "ssh 主机IP地址（仅适用于SSH驱动程序）",
	"If present, writes to the provided file instead of stdout.": "如果存在，则写入所提供的文件，而不是标准输出。",
	"If set, added node will be available as worker. Defaults to true.": "如果设置，则添加的节点将作为 worker 可用。默认值为 true。",
	"If set, added node will become a control-plane. Defaults to false. Currently only supported for existing HA (multi-control plane) clusters.": "如果设置，则添加的节点将成为控制平面。默认值为 false。目前仅支持现有的 HA（多控制平面）集群。",
	"If set, automatically updates drivers to the latest version. Defaults to true.": "如果设置为 true，将自动更新驱动到最新版本。默认为 true。",
	"If set, delete the current cluster if start fails and try again. Defaults to false.": "如果设置为 true，则在启动失败时删除当前群集，然后重试。默认为 false。",
	"If set, disables metrics reporting (CPU and memory usage), this can improve CPU usage. Defaults to false.": "如果设置为 true，则禁用指标报告（CPU和内存使用率），这可以提高 CPU 利用率。默认为 false。",
	"If set, disables optimizations that are set for local Kubernetes. Including decreasing CoreDNS replicas from 2 to 1. Defaults to false.": "如果设置为 true，则禁用为本地 Kubernetes 做设置的优化，包括将 CoreDNS 副本数从2减少到1。默认值为false。",
	"If set, download tarball of preloaded images if available to improve start time. Defaults to true.": "如果设置为true，则在可用时下载预加载映像的tarball，以提高启动时间。默认为true。",
	"If set, force the container runtime to use systemd as cgroup manager. Defaults to false.": "如果设置为 true，则强制容器运行时使用 systemd 作为 cgroup 管理器。默认为false。",
	"If set, install addons. Defaults to true.": "如果设置为 true，则安装插件。默认为true。",
	"If set, minikube VM/container will start without starting or configuring Kubernetes. (only works on new clusters)": "如果设置为 true，minikube虚拟机/容器将在不启动或配置Kubernetes的情况下启动。(只适用于新集群)",
	"If set, pause all namespaces": "如果设置为 true，则暂停所有 namespace",
	"If set, unpause all namespaces": "如果设置为 true，取消暂停所有 namespace",
	"If the above advice does not help, please let us know:": "如果上述建议无法帮助解决问题，请告知我们：",
	"If the host has a firewall:\n\t\t\n\t\t1. Allow a port through the firewall\n\t\t2. Specify \"--port=\u003cport_number\u003e\" for \"minikube mount\"": "如果主机有防火墙：\n\n1. 允许防火墙通过一个端口\n2. 对于 'minikube mount'，指定 '--port=\u003c端口号\u003e'",
	"If true, cache docker images for the current bootstrapper and load them into the machine. Always false with --driver=none.": "如果设置为 true，则缓存当前引导程序的 docker 镜像并加载到机器中。当使用--driver=none时，始终为false。",
	"If true, cache docker images for the current bootstrapper and load them into the machine. Always false with --vm-driver=none.": "如果为 true，请缓存当前引导程序的 docker 镜像并将其加载到机器中。在 --vm-driver=none 情况下始终为 false。",
	"If true, only download and cache files for later use - don't install or start anything.": "如果为 true，仅会下载和缓存文件以备后用 - 不会安装或启动任何项。",
	"If true, pods might get deleted and restarted on addon enable": "如果为 true，pods可能会被删除并在启用插件时重新启动",
	"If true, print web links to addons' documentation if using --output=list (default).": "如果为 true，则使用 --output=list（默认值）输出 web 链接到插件文档。",
	"If true, returns list of profiles faster by skipping validating the status of the cluster.": "如果为 true，则通过跳过验证群集的状态从而更快地返回配置文件列表。",
	"If true, the added node will be marked for work. Defaults to true.": "如果为true，则添加的节点将标记为 work，默认为 true。",
	"If true, will perform potentially dangerous operations. Use with discretion.": "如果为 true，将执行潜在的危险操作。谨慎使用。",
	"If you are running minikube within a VM, consider using --driver=none:": "如果您在VM中运行 minikube，请考虑使用 --driver=none:",
	"If you are still interested to make {{.driver_name}} driver work. The following suggestions might help you get passed this issue:": "如果您仍然有兴趣使 {{.driver_name}} 驱动工作。以下建议可能会帮助您解决此问题：",
	"If you don't want your credentials mounted into a specific pod, add a label with the `gcp-auth-skip-secret` key to your pod configuration.": "如果您不希望将凭据挂载到特定的 Pod 中，请在 Pod 配置中添加带有 `gcp-auth-skip-secret` 键的标签。",
	"If you want existing pods to be mounted with credentials, either recreate them or rerun addons enable with --refresh.": "如果您希望现有的 Pod 使用凭据挂载，请重新创建它们或使用 --refresh 重新运行 addons enable。",
	"Ignoring empty custom image {{.name}}": "忽略空的自定义镜像 {{.name}}",
	"Ignoring invalid pair entry {{.pair}}": "忽略无效的配对条目 {{.pair}}",
	"Ignoring unknown custom image {{.name}}": "忽略未知的自定义镜像 {{.name}}",
	"Ignoring unknown custom registry {{.name}}": "忽略未知的自定义仓库 {{.name}}",
	"Image was not built for the current minikube version. To resolve this you can delete and recreate your minikube cluster using the latest images. Expected minikube version: {{.imageMinikubeVersion}} -\u003e Actual minikube version: {{.minikubeVersion}}": "此镜像不适用于当前的 minikube 版本。要解决此问题，您可以删除并重新创建您的 minikube 集群，使用最新的镜像。预期的 minikube 版本：{{.imageMinikubeVersion}} -\u003e 实际的 minikube 版本：{{.minikubeVersion}}",
	"Images Commands:": "镜像命令",
	"Images used by this addon. Separated by commas.": "这个插件使用的镜像。以逗号分隔。",
	"In order to use the fall back image, you need to log in to the github packages registry": "为使用后备镜像，你需要登录到 github packages registry",
	"Insecure Docker registries to pass to the Docker daemon.  The default service CIDR range will automatically be added.": "传递给 Docker 守护进程的不安全 Docker Registry。 系统会自动添加默认 service CIDR 范围。",
	"Insecure Docker registries to pass to the Docker daemon. The default service CIDR range will automatically be added.": "传递给 Docker 守护进程的不安全 Docker 注册表。系统会自动添加默认服务 CIDR 范围。",
	"Install VirtualBox and ensure it is in the path, or select an alternative value for --driver": "安装 VirtualBox 并确保它在路径中，或选择一个替代的值作为 --driver。",
	"Install the latest hyperkit binary, and run 'minikube delete'": "安装最新的 hyperkit 二进制文件，然后运行 'minikube delete'",
	"Interval is an invalid duration: {{.error}}": "'Interval' 是无效的持续时间:{{.error}}",
	"Interval must be greater than 0s": "'Interval' 必须大于0",
	"Invalid port": "无效的端口",
	"Istio needs {{.minCPUs}} CPUs -- your configuration only allocates {{.cpus}} CPUs": "Istio 需要 {{.minCPUs}} 个CPU核心，但您的配置只分配了 {{.cpus}} 个CPU核心。",
	"Istio needs {{.minMem}}MB of memory -- your configuration only allocates {{.memory}}MB": "Istio 需要 {{.minMem}}MB 内存，而你的配置只分配了 {{.memory}}MB",
	"It seems that you are running in GCE, which means authentication should work without the GCP Auth addon. If you would still like to authenticate using a credentials file, use the --force flag.": "看起来您正在 GCE 中运行，这意味着身份验证应该可以在没有 GCP Auth 插件的情况下工作。如果您仍然想使用凭据文件进行身份验证，请使用 --force 标志。",
	"It's very likely that you have an internet issue. Please ensure that you can access the internet at least via HTTP, directly or with proxy. Currently your proxy configure is:": "",
	"Kicbase images have not been deleted. To delete images run:": "Kicbase 镜像未被删除。要删除镜像，请运行：",
	"Kill the mount process spawned by minikube start": "终止由 minikube start 生成的挂载进程",
	"Kubernetes requires at least 2 CPU's to start": "Kubernetes至少需要2个CPU才能启动",
	"Kubernetes version not found in GitHub version list. You can force a Kubernetes version via the --force flag": "在GitHub版本列表中找不到Kubernetes版本。您可以通过--force标志强制使用Kubernetes版本",
	"Kubernetes version {{.specified}} found in GitHub version list": "在 GitHub 版本列表中找到了 Kubernetes 版本 {{.specified}}。",
	"Kubernetes version {{.specified}} found in version list": "在版本列表中找到了 Kubernetes 版本 {{.specified}}。",
	"Kubernetes version {{.version}} is not supported by this release of minikube": "Kubernetes 版本 {{.version}} 不受此版本的 minikube 支持",
	"Kubernetes {{.new}} is now available. If you would like to upgrade, specify: --kubernetes-version={{.new}}": "Kubernetes {{.new}} 现在可用了。如果您想升级，请指定 --kubernetes-version={{.new}}",
	"Kubernetes {{.new}} is now available. If you would like to upgrade, specify: --kubernetes-version={{.prefix}}{{.new}}": "Kubernetes {{.new}} 现在可用。如果您想要升级，请指定：--kubernetes-version={{.prefix}}{{.new}}",
	"Kubernetes {{.version}} is not supported by this release of minikube": "当前版本的 minikube 不支持 Kubernetes {{.version}}",
	"Kubernetes: Stopping ...": "Kubernetes:正在停止。。。",
	"Kubernetes: {{.status}}": "Kubernetes: {{.status}}",
	"Launching Kubernetes ... ": "正在启动 Kubernetes ... ",
	"Launching proxy ...": "正在启动代理...",
	"List all available images from the local cache.": "列出本地缓存中所有可用的镜像。",
	"List existing minikube nodes.": "列出现有的minikube节点。",
	"List image names the addon w/ADDON_NAME used. For a list of available addons use: minikube addons list": "列出使用 w/ADDON_NAME 插件的镜像名称。有关可用插件的列表，请使用: minikube addons list",
	"List images": "列出镜像",
	"List nodes.": "列出节点。",
	"List of guest VSock ports that should be exposed as sockets on the host (hyperkit driver only)": "应在主机上公开为套接字的访客 VSock 端口列表（仅限 hyperkit 驱动程序）",
	"List of ports that should be exposed (docker and podman driver only)": "应该公开的端口列表（仅适用于 docker 和 podman 驱动）",
	"Listening to 0.0.0.0 on external docker host {{.host}}. Please be advised": "在外部docker主机 {{.host}} 上监听0.0.0.0。请注意",
	"Listening to {{.listenAddr}}. This is not recommended and can cause a security vulnerability. Use at your own risk": "监听 {{.listenAddr}}。不建议这样做，可能会造成安全漏洞。请自行决定是否使用",
	"Lists all available minikube addons as well as their current statuses (enabled/disabled)": "列出所有可用的minikube插件及其当前状态 (enabled/disabled)",
	"Lists all minikube profiles.": "列出所有 minikube 配置文件。",
	"Lists all valid default values for PROPERTY_NAME": "列出 PROPERTY_NAME 所有有效的默认值",
	"Lists all valid minikube profiles and detects all possible invalid profiles.": "列出所有有效的 minikube 配置文件并检测所有可能的无效配置文件。",
	"Lists the URLs for the services in your local cluster": "列出本地集群中服务的 url",
	"Load an image into minikube": "将镜像加载到 minikube 中",
	"Local folders to share with Guest via NFS mounts (hyperkit driver only)": "通过 NFS 装载与访客共享的本地文件夹（仅限 hyperkit 驱动程序）",
	"Local proxy ignored: not passing {{.name}}={{.value}} to docker env.": "本地代理被忽略:没有传递 {{.name}}={{.value}} 给 docker 环境。",
	"Location of the VPNKit socket used for networking. If empty, disables Hyperkit VPNKitSock, if 'auto' uses Docker for Mac VPNKit connection, otherwise uses the specified VSock (hyperkit driver only)": "用于网络连接的 VPNKit 套接字的位置。如果为空，则停用 Hyperkit VPNKitSock；如果为“auto”，则将 Docker 用于 Mac VPNKit 连接；否则使用指定的 VSock（仅限 hyperkit 驱动程序）",
	"Location of the minikube iso": "minikube iso 的位置",
	"Location to fetch kubectl, kubelet, \u0026 kubeadm binaries from.": "kubectl、kubelet、kubeadm 二进制文件源。",
	"Locations to fetch the minikube ISO from.": "minikube ISO镜像源。",
	"Log into or run a command on a machine with SSH; similar to 'docker-machine ssh'.": "使用SSH登录或在机器上运行命令；类似于 'docker-machine ssh'。",
	"Log into the minikube environment (for debugging)": "登录到 minikube 环境（用于调试）",
	"Logs file created ({{.logPath}}), remember to include it when reporting issues!": "日志文件已创建（{{.logPath}}），在报告问题时请记得将其包含在内！",
	"Manage cache for images": "管理 images 缓存",
	"Manage images": "管理 images",
	"Message Size: {{.size}}": "消息大小：{{.size}}",
	"Minikube is a CLI tool that provisions and manages single-node Kubernetes clusters optimized for development workflows.": "Minikube 是一个命令行工具，它提供和管理针对开发工作流程优化的单节点 Kubernetes 集群。",
	"Minimum VirtualBox Version supported: {{.vers}}, current VirtualBox version: {{.cvers}}": "支持的最低 VirtualBox 版本：{{.vers}}，当前的 VirtualBox 版本：{{.cvers}}",
	"Modify minikube config": "修改 minikube 配置",
	"Modify minikube's kubernetes addons": "修改 minikube 的 kubernetes 插件",
	"Modify persistent configuration values": "修改持久配置值",
	"More information: https://docs.docker.com/engine/install/linux-postinstall/#your-kernel-does-not-support-cgroup-swap-limit-capabilities": "更多信息请参阅：https://docs.docker.com/engine/install/linux-postinstall/#your-kernel-does-not-support-cgroup-swap-limit-capabilities",
	"Most users should use the newer 'docker' driver instead, which does not require root!": "大多数用户应该使用更新后的“docker”驱动程序，该驱动程序不需要root用户运行！",
	"Mount type:   {{.name}}": "挂载类型： {{.name}}",
	"Mounting host path {{.sourcePath}} into VM as {{.destinationPath}} ...": "将主机路径 {{.sourcePath}} 挂载到虚拟机中作为 {{.destinationPath}} ...",
	"Mounts the specified directory into minikube": "将指定的目录挂载到 minikube",
	"Mounts the specified directory into minikube.": "将指定的目录挂载到 minikube。",
	"Multiple errors deleting profiles": "删除配置文件时出现多个错误",
	"Multiple errors encountered:": "遇到了多个错误：",
	"Multiple minikube profiles were found -": "发现了多个 minikube 配置文件 -",
	"Multiple minikube profiles were found - ": "找到多个 minikube 配置文件 - ",
	"NIC Type used for host only network. One of Am79C970A, Am79C973, 82540EM, 82543GC, 82545EM, or virtio (virtualbox driver only)": "网卡类型仅用于主机网络。Am79C970A, Am79C973, 82540EM, 82543GC, 82545EM 之一，或 virtio(仅限 VirtualBox 驱动程序)",
	"NIC Type used for nat network. One of Am79C970A, Am79C973, 82540EM, 82543GC, 82545EM, or virtio (virtualbox driver only)": "用于 nat 网络的 NIC 类型。 Am79C970A、Am79C973、82540EM、82543GC、82545EM 或 virtio 之一（仅限 virtualbox 驱动程序）",
	"NOTE: Please do not close this terminal as this process must stay alive for the tunnel to be accessible ...": "注意：请不要关闭此终端，因为此进程必须保持活动状态才能访问隧道......",
	"NOTE: This process must stay alive for the mount to be accessible ...": "注意：此进程必须保持活动状态才能访问安装......",
	"Networking and Connectivity Commands:": "网络和连接命令：",
	"No IP address provided. Try specifying --ssh-ip-address, or see https://minikube.sigs.k8s.io/docs/drivers/ssh/": "未提供 IP 地址。尝试指定 --ssh-ip-address，或参见 https://minikube.sigs.k8s.io/docs/drivers/ssh/",
	"No changes required for the \"{{.context}}\" context": "不需要对“{{.context}}”上下文进行任何更改",
	"No control-plane nodes found.": "未找到控制平面节点。",
	"No minikube profile was found.": "未找到 minikube 配置文件。",
	"No minikube profile was found. ": "未找到 minikube 配置文件。",
	"No possible driver was detected. Try specifying --driver, or see https://minikube.sigs.k8s.io/docs/start/": "未检测到可用的驱动程序。尝试指定 --driver，或查看 https://minikube.sigs.k8s.io/docs/start/",
	"No services were found in the '{{.namespace}}' namespace.\nYou may select another namespace by using 'minikube service --all -n \u003cnamespace\u003e'": "",
	"No such addon {{.name}}": "没有此类插件 {{.name}}",
	"No valid URL found for tunnel.": "未找到有效的隧道URL。",
	"No valid port found for tunnel.": "没有找到隧道的有效端口。",
	"Node {{.name}} failed to start, deleting and trying again.": "节点 {{.name}} 启动失败，删除后重试。",
	"Node {{.name}} was successfully deleted.": "节点 {{.name}} 已成功删除。",
	"Node {{.nodeName}} does not exist.": "节点 {{.nodeName}} 不存在。",
	"None of the known repositories are accessible. Consider specifying an alternative image repository with --image-repository flag": "无法访问任何已知的仓库。请考虑使用 --image-repository 标志指定备用的镜像仓库",
	"None of the known repositories in your location are accessible. Using {{.image_repository_name}} as fallback.": "您所在位置的已知存储库都无法访问。正在将 {{.image_repository_name}} 用作后备存储库。",
	"None of the known repositories is accessible. Consider specifying an alternative image repository with --image-repository flag": "已知存储库都无法访问。请考虑使用 --image-repository 标志指定备选镜像存储库",
	"Noticed you have an activated docker-env on {{.driver_name}} driver in this terminal:": "注意，您在此终端上的 {{.driver_name}} 驱动上已激活 docker-env：",
	"Noticed you have an activated podman-env on {{.driver_name}} driver in this terminal:": "注意，您在此终端上的 {{.driver_name}} 驱动上已激活 podman-env：",
	"Number of CPUs allocated to the minikube VM": "分配给 minikube 虚拟机的 CPU 的数量",
	"Number of extra disks created and attached to the minikube VM (currently only implemented for hyperkit, kvm2, and qemu2 drivers)": "创建并附加到 minikube VM 的额外磁盘数（当前仅支持 hyperkit、kvm2 和 qemu2 驱动程序）",
	"Number of lines back to go within the log": "在日志中回退的行数",
	"OS release is {{.pretty_name}}": "操作系统版本是 {{.pretty_name}}",
	"One of 'text', 'yaml' or 'json'.": "可选项：'text','yaml' 或 'json'。",
	"One of 'yaml' or 'json'.": "'yaml'或'json'中的一个。",
	"Only alphanumeric and dashes '-' are permitted. Minimum 1 character, starting with alphanumeric.": "仅允许字母数字和破折号'-'。最少1个字符，以字母数字开头。",
	"Only alphanumeric and dashes '-' are permitted. Minimum 2 characters, starting with alphanumeric.": "仅允许字母数字和破折号'-'。最少2个字符，以字母数字开头。",
	"Open the addons URL with https instead of http": "使用 https 替代 http 打开插件的 URL",
	"Open the service URL with https instead of http (defaults to \"false\")": "使用 https 替代 http 打开服务的 URL（默认为 \"false\"）。",
	"Opening Kubernetes service  {{.namespace_name}}/{{.service_name}} in default browser...": "正通过默认浏览器打开 Kubernetes 服务 {{.namespace_name}}/{{.service_name}}...",
	"Opening service {{.namespace_name}}/{{.service_name}} in default browser...": "正通过默认浏览器打开服务 {{.namespace_name}}/{{.service_name}}...",
	"Opening {{.url}} in your default browser...": "正在使用默认浏览器打开 {{.url}} ...",
	"Opens the addon w/ADDON_NAME within minikube (example: minikube addons open dashboard). For a list of available addons use: minikube addons list ": "在 minikube 中打开带有 ADDON_NAME 的插件（例如：minikube addons open dashboard）。要获取可用插件的列表，请使用：minikube addons list",
	"Operations on nodes": "节点操作",
	"Options:      {{.options}}": "选项：{{.options}}",
	"Output format. Accepted values: [json, yaml]": "输出格式。可接受的值：[json, yaml]",
	"Outputs minikube shell completion for the given shell (bash, zsh, fish or powershell)\n\n\tThis depends on the bash-completion binary.  Example installation instructions:\n\tOS X:\n\t\t$ brew install bash-completion\n\t\t$ source $(brew --prefix)/etc/bash_completion\n\t\t$ minikube completion bash \u003e ~/.minikube-completion  # for bash users\n\t\t$ minikube completion zsh \u003e ~/.minikube-completion  # for zsh users\n\t\t$ source ~/.minikube-completion\n\t\t$ minikube completion fish \u003e ~/.config/fish/completions/minikube.fish # for fish users\n\tUbuntu:\n\t\t$ apt-get install bash-completion\n\t\t$ source /etc/bash_completion\n\t\t$ source \u003c(minikube completion bash) # for bash users\n\t\t$ source \u003c(minikube completion zsh) # for zsh users\n\t\t$ minikube completion fish \u003e ~/.config/fish/completions/minikube.fish # for fish users\n\n\tAdditionally, you may want to output the completion to a file and source in your .bashrc\n\n\tWindows:\n\t\t## Save completion code to a script and execute in the profile\n\t\tPS\u003e minikube completion powershell \u003e $HOME\\.minikube-completion.ps1\n\t\tPS\u003e Add-Content $PROFILE '. $HOME\\.minikube-completion.ps1'\n\n\t\t## Execute completion code in the profile\n\t\tPS\u003e Add-Content $PROFILE 'if (Get-Command minikube -ErrorAction SilentlyContinue) {\n\t\t        minikube completion powershell | Out-String | Invoke-Expression\n\t\t    }'\n\n\tNote for zsh users: [1] zsh completions are only supported in versions of zsh \u003e= 5.2\n\tNote for fish users: [2] please refer to this docs for more details https://fishshell.com/docs/current/#tab-completion\n": "为给定的 shell（bash、zsh、fish 或 powershell）输出 minikube 的 shell 自动完成\n\n\t这取决于 bash-completion 二进制文件。以下是示例安装说明：\n\tOS X:\n\t\t$ brew install bash-completion\n\t\t$ source $(brew --prefix)/etc/bash_completion\n\t\t$ minikube completion bash \u003e ~/.minikube-completion  # 对于 bash 用户\n\t\t$ minikube completion zsh \u003e ~/.minikube-completion  # 对于 zsh 用户\n\t\t$ source ~/.minikube-completion\n\t\t$ minikube completion fish \u003e ~/.config/fish/completions/minikube.fish # 对于 fish 用户\n\tUbuntu:\n\t\t$ apt-get install bash-completion\n\t\t$ source /etc/bash_completion\n\t\t$ source \u003c(minikube completion bash) # 对于 bash 用户\n\t\t$ source \u003c(minikube completion zsh) # 对于 zsh 用户\n\t\t$ minikube completion fish \u003e ~/.config/fish/completions/minikube.fish # 对于 fish 用户\n\n\t此外，您可能希望将自动完成输出到一个文件，并在您的 .bashrc 中进行导入\n\n\tWindows:\n\t\t## 将完成代码保存到一个脚本中，并在配置文件中执行\n\t\tPS\u003e minikube completion powershell \u003e $HOME.minikube-completion.ps1\n\t\tPS\u003e Add-Content $PROFILE '. $HOME.minikube-completion.ps1'\n\n\t\t## 在配置文件中执行完成代码\n\t\tPS\u003e Add-Content $PROFILE 'if (Get-Command minikube -ErrorAction SilentlyContinue) {\n\t\t        minikube completion powershell | Out-String | Invoke-Expression\n\t\t    }'\n\n\tzsh 用户注意：[1] 仅支持 zsh 版本 \u003e= 5.2 的 zsh 自动完成\n\tFish 用户注意：[2] 请参考此文档获取更多详细信息：https://fishshell.com/docs/current/#tab-completion\n",
	"Outputs the licenses of dependencies to a directory": "将依赖项的 licenses 输出到一个目录",
	"Overwrite image even if same image:tag name exists": "即使存在相同的镜像 image:tag 也要覆盖镜像",
	"Path to socket vmnet binary (QEMU driver only)": "vmnet 二进制文件的路径（仅适用于 QEMU 驱动程序）",
	"Path to the Dockerfile to use (optional)": "Dockerfile 的路径（可选）",
	"Path to the qemu firmware file. Defaults: For Linux, the default firmware location. For macOS, the brew installation location. For Windows, C:\\Program Files\\qemu\\share": "qemu 固件文件的路径。默认值：对于 Linux，使用默认固件位置。对于 macOS，使用 brew 安装位置。对于 Windows，使用 C:\\Program Files\\qemu\\share",
	"Path to the socket vmnet client binary (QEMU driver only)": "vmnet 客户端二进制文件的路径（仅适用于 QEMU 驱动程序）",
	"Pause": "暂停",
	"Paused kubelet and {{.count}} containers": "已暂停 kubelet 和 {{.count}} 个容器",
	"Paused kubelet and {{.count}} containers in: {{.namespaces}}": "已暂停 {{.namespaces}} 中的 kubelet 和 {{.count}} 个容器",
	"Paused {{.count}} containers": "已暂停 {{.count}} 个容器",
	"Paused {{.count}} containers in: {{.namespaces}}": "已暂停命名空间：{{.namespaces}} 中 {{.count}} 个容器",
	"Pausing node {{.name}} ... ": "正在暂停节点 {{.name}} ...",
	"Permissions:  {{.octalMode}} ({{.writtenMode}})": "权限：  {{.octalMode}} ({{.writtenMode}})",
	"Please also attach the following file to the GitHub issue:": "请同时将以下文件附加到 GitHub 问题中：",
	"Please create a cluster with bigger disk size: `minikube start --disk SIZE_MB` ": "请使用以下命令创建一个磁盘更大的集群：minikube start --disk SIZE_MB",
	"Please either authenticate to the registry or use --base-image flag to use a different registry.": "请对注册表进行身份验证，或使用 --base-image 标志使用不同的注册表",
	"Please enter a value:": "请输入一个值：",
	"Please free up disk or prune images.": "请释放磁盘空间或者清理镜像。",
	"Please increase Desktop's disk size.": "请增加 Desktop 的磁盘大小。",
	"Please install the minikube hyperkit VM driver, or select an alternative --driver": "请安装 minikube hyperkit VM 驱动程序，或选择备用驱动程序 --driver",
	"Please install the minikube kvm2 VM driver, or select an alternative --driver": "请安装 minikube kvm2 VM 驱动程序，或选择备用驱动程序 --driver",
	"Please make sure the service you are looking for is deployed or is in the correct namespace.": "请确保您要查找的服务已部署或位于正确的命名空间中。",
	"Please provide a path or url to build": "请提供一个构建的路径或URL",
	"Please provide an image in the container runtime to save from minikube via \u003cminikube image save IMAGE_NAME\u003e": "请在容器运行时中提供一个镜像，以通过\u003cminikube image save IMAGE_NAME\u003e从 minikube 保存",
	"Please provide an image in your local daemon to load into minikube via \u003cminikube image load IMAGE_NAME\u003e": "请在本地 Docker 守护程序中提供一个镜像，以通过 \u003cminikube image load IMAGE_NAME\u003e 加载到 minikube 中",
	"Please provide source and target image": "请提供源镜像和目标镜像。",
	"Please re-eval your docker-env, To ensure your environment variables have updated ports:\n\n\t'minikube -p {{.profile_name}} docker-env'\n\n\t": "请重新评估您的 docker-env，以确保您的环境变量已更新端口：\n\n\t'minikube -p {{.profile_name}} docker-env'\n\n\t",
	"Please re-eval your podman-env, To ensure your environment variables have updated ports:\n\n\t'minikube -p {{.profile_name}} podman-env'\n\n\t": "请重新评估您的 podman-env，以确保您的环境变量已更新端口：\n\n\t'minikube -p {{.profile_name}} docker-env'\n\n\t",
	"Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.": "请运行 minikube logs --file=logs.txt 命令，并将生成的 logs.txt 文件附加到 GitHub 问题中。",
	"Please see {{.documentation_url}} for more details": "请参阅 {{.documentation_url}} 了解更多详情",
	"Please specify the directory to be mounted: \n\tminikube mount \u003csource directory\u003e:\u003ctarget directory\u003e   (example: \"/host-home:/vm-home\")": "请指定要挂载的目录：\n\tminikube mount \u003c源文件路径\u003e:\u003c目标文件绝对路径\u003e （示例：\"/host-home:/vm-home\"）",
	"Please specify the path to copy: \n\tminikube cp \u003csource file path\u003e \u003ctarget file absolute path\u003e (example: \"minikube cp a/b.txt /copied.txt\")": "请指定要复制的路径：\n\tminikube cp \u003c源文件路径\u003e \u003c目标文件绝对路径\u003e （示例：\"minikube cp a/b.txt /copied.txt\"）",
	"Please try purging minikube using `minikube delete --all --purge`": "请尝试使用 `minikube delete --all --purge` 清除 minikube",
	"Please upgrade the '{{.driver_executable}}'. {{.documentation_url}}": "请升级“{{.driver_executable}}”。{{.documentation_url}}",
	"Please visit the following link for documentation around this: \n\thttps://help.github.com/en/packages/using-github-packages-with-your-projects-ecosystem/configuring-docker-for-use-with-github-packages#authenticating-to-github-packages\n": "请查看以下链接以获取相关文档：\nhttps://help.github.com/en/packages/using-github-packages-with-your-projects-ecosystem/configuring-docker-for-use-with-github-packages#authenticating-to-github-packages",
	"Populates the specified folder with documentation in markdown about minikube": "用关于 minikube 的 markdown 文档填充指定文件夹",
	"PowerShell is running in constrained mode, which is incompatible with Hyper-V scripting.": "PowerShell 正在受限模式下运行，这与 Hyper-V 脚本不兼容。",
	"Powering off \"{{.profile_name}}\" via SSH ...": "正在通过 SSH 关闭“{{.profile_name}}”…",
	"Preparing Kubernetes {{.k8sVersion}} on {{.runtime}} {{.runtimeVersion}} ...": "正在 {{.runtime}} {{.runtimeVersion}} 中准备 Kubernetes {{.k8sVersion}}…",
	"Preparing {{.runtime}} {{.runtimeVersion}} ...": "正在准备 {{.runtime}} {{.runtimeVersion}} ...",
	"Print current and latest version number": "打印当前版本和最新版本",
	"Print just the version number.": "仅打印版本号。",
	"Print the version of minikube": "打印 minikube 版本",
	"Print the version of minikube.": "打印 minikube 版本。",
	"Problems detected in {{.entry}}:": "在 {{.entry}} 中 检测到问题：",
	"Problems detected in {{.name}}:": "在 {{.name}} 中 检测到问题：",
	"Profile \"{{.cluster}}\" not found. Run \"minikube profile list\" to view all profiles.": "未找到配置文件 \"{{.cluster}}\"。运行 \"minikube profile list\" 命令查看所有配置文件。",
	"Profile gets or sets the current minikube profile": "获取或设置当前的 minikube 配置文件",
	"Profile name \"{{.profilename}}\" is minikube keyword. To delete profile use command minikube delete -p \u003cprofile name\u003e": "配置文件名称 \"{{.profilename}}\" 是 minikube 的一个关键字。使用 minikube delete -p \u003cprofile name\u003e 命令 删除配置文件",
	"Profile name \"{{.profilename}}\" is reserved keyword. To delete this profile, run: \"{{.cmd}}\"": "配置文件名称 \"{{.profilename}}\" 是保留关键字。要删除该配置文件，请执行命令：\"{{.cmd}}\"",
	"Profile name '{{.name}}' is duplicated with machine name '{{.machine}}' in profile '{{.profile}}'": "配置文件名称 '{{.name}}' 与机器名称 '{{.machine}}' 在 '{{.profile}}' 配置文件中重复",
	"Profile name '{{.name}}' is not valid": "配置文件名称 '{{.name}}' 无效",
	"Profile name '{{.profilename}}' is not valid": "配置文件名称 '{{.profilename}}' 无效",
	"Profile name should be unique": "配置文件名称应该是唯一的",
	"Provide VM UUID to restore MAC address (hyperkit driver only)": "提供虚拟机 UUID 以恢复 MAC 地址（仅限 hyperkit 驱动程序）",
	"Provides instructions to point your terminal's docker-cli to the Docker Engine inside minikube. (Useful for building docker images directly inside minikube)": "提供将终端的 docker-cli 指向 minikube 内部 Docker Engine 的说明。（用于直接在 minikube 内构建 docker 镜像）",
	"Provides instructions to point your terminal's docker-cli to the Docker Engine inside minikube. (Useful for building docker images directly inside minikube)\n\nFor example, you can do all docker operations such as docker build, docker run, and docker ps directly on the docker inside minikube.\n\nNote: You need the docker-cli to be installed on your machine.\ndocker-cli install instructions: https://minikube.sigs.k8s.io/docs/tutorials/docker_desktop_replacement/#steps": "提供将终端的 docker-cli 指向 minikube 内部 Docker Engine 的说明。（用于直接在 minikube 内构建 docker 镜像）\n\n例如，您可以在 minikube 内的 docker 上执行所有 docker 操作，如 docker build、docker run 和 docker ps。\n\n注意：您需要在计算机上安装 docker-cli。\n\ndocker-cli 安装指南：https://minikube.sigs.k8s.io/docs/tutorials/docker_desktop_replacement/#steps",
	"Pull images": "拉取镜像",
	"Pull the remote image (no caching)": "拉取远程镜像（禁用缓存）",
	"Pulling base image ...": "正在拉取基础镜像 ...",
	"Pulling base image {{.kicVersion}} ...": "正在拉取基础镜像 {{.kicVersion}} ...",
	"Pulling images ...": "拉取镜像 ...",
	"Push images": "推送镜像",
	"Push the new image (requires tag)": "推送新的镜像（需要标签）",
	"Reboot to complete VirtualBox installation, verify that VirtualBox is not blocked by your system, and/or use another hypervisor": "重启以完成 VirtualBox 安装，检查 VirtualBox 未被您的操作系统禁用，或者使用其他的管理程序。",
	"Rebuild libvirt with virt-network support": "重新构建带有 virt-network 支持的 libvirt",
	"Received {{.name}} signal": "收到 {{.name}} 信号",
	"Reconfiguring existing host ...": "重新配置现有主机",
	"Recreate the cluster by running:\n\t\tminikube delete {{.profileArg}}\n\t\tminikube start {{.profileArg}}": "运行以下命令重新创建集群:n\t\tminikube delete {{.profileArg}}\n\t\tminikube start {{.profileArg}}",
	"Registries used by this addon. Separated by commas.": "此插件使用的注册表。以逗号分隔。",
	"Registry addon with {{.driver}} driver uses port {{.port}} please use that instead of default port 5000": "注册表插件 {{.driver}} Driver 使用端口 {{.port}} 代替默认端口 5000",
	"Registry mirrors to pass to the Docker daemon": "传递给 Docker 守护进程的注册表镜像",
	"Reinstall VirtualBox and reboot. Alternatively, try the kvm2 driver: https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/": "重新安装 VirtualBox 并重新启动。或者，尝试 kvm2 驱动程序：https://minikube.sigs.k8s.io/docs/reference/drivers/kvm2/",
	"Reinstall VirtualBox and verify that it is not blocked: System Preferences -\u003e Security \u0026 Privacy -\u003e General -\u003e Some system software was blocked from loading": "重新安装 VirtualBox 并验证未被阻止：系统偏好设置 -\u003e 安全与隐私 -\u003e 常规 -\u003e 某些系统软件被阻止加载",
	"Related issue: {{.url}}": "相关问题：{{.url}}",
	"Related issues:": "相关问题：",
	"Relaunching Kubernetes using {{.bootstrapper}} ...": "正在使用 {{.bootstrapper}} 重新启动 Kubernetes…",
	"Remove one or more images": "移除一个或多个镜像",
	"Remove the invalid --docker-opt or --insecure-registry flag if one was provided": "如果提供了无效的 --docker-opt 或 --insecure-registry 标志，请将其移除",
	"Removed all traces of the \"{{.name}}\" cluster.": "已删除所有关于 \"{{.name}}\" 集群的痕迹。",
	"Removing {{.directory}} ...": "正在移除 {{.directory}}…",
	"Requested cpu count {{.requested_cpus}} is greater than the available cpus of {{.avail_cpus}}": "请求的 CPU 数量 {{.requested_cpus}}  大于可用的 CPU 值 {{.avail_cpus}}",
	"Requested cpu count {{.requested_cpus}} is less than the minimum allowed of {{.minimum_cpus}}": "请求的 CPU 数量 {{.requested_cpus}} 小于允许的最小值 {{.minimum_cpus}}",
	"Requested disk size {{.requested_size}} is less than minimum of {{.minimum_size}}": "请求的磁盘大小 {{.requested_size}} 小于最小值 {{.minimum_size}}",
	"Requested memory allocation ({{.memory}}MB) is less than the default memory allocation of {{.default_memorysize}}MB. Beware that minikube might not work correctly or crash unexpectedly.": "请求的内存分配 ({{.memory}}MB) 小于默认内存分配 {{.default_memorysize}}MB。请注意 minikube 可能无法正常运行或可能会意外崩溃。",
	"Requested memory allocation ({{.requested}}MB) is less than the recommended minimum {{.recommend}}MB. Deployments may fail.": "请求的内存分配（{{.requested}}MB）小于推荐的最小值 {{.recommend}}MB。部署可能失败。",
	"Requested memory allocation {{.requested_size}} is less than the minimum allowed of {{.minimum_size}}": "请求的内存分配 {{.requested_size}} 小于允许的 {{.minimum_size}} 最小值",
	"Requested memory allocation {{.requested}}MB is more than your system limit {{.system_limit}}MB.": "请求的内存分配 {{.requested}}MB 超过了系统限制 {{.system_limit}}MB。",
	"Requested memory allocation {{.requested}}MiB is less than the usable minimum of {{.minimum_memory}}MB": "请求的内存分配 {{.requested}}MiB 小于可用的最低 {{.minimum_memory}}MB",
	"Reset Docker to factory defaults": "将 Docker 重置为出厂默认设置。",
	"Restart Docker": "重启 Docker",
	"Restart Docker, Ensure docker is running and then run: 'minikube delete' and then 'minikube start' again": "重启 Docker，确保 Docker 正在运行，然后运行：'minikube delete'，然后再次运行：'minikube start'",
	"Restarting existing {{.driver_name}} {{.machine_type}} for \"{{.cluster}}\" ...": "正在为\"{{.cluster}}\"重启现有的 {{.driver_name}} {{.machine_type}} ...",
	"Restarting the {{.name}} service may improve performance.": "重新启动 {{.name}} 服务可能会改善性能。",
	"Retrieve the ssh host key of the specified node": "检索指定节点的 ssh 主机密钥",
	"Retrieve the ssh host key of the specified node.": "检索指定节点的 ssh 主机密钥。",
	"Retrieve the ssh identity key path of the specified cluster": "检索指定集群的 ssh 密钥路径",
	"Retrieve the ssh identity key path of the specified cluster.": "检索指定集群的 ssh 密钥路径。",
	"Retrieve the ssh identity key path of the specified node": "检索指定节点的 ssh 密钥路径",
	"Retrieve the ssh identity key path of the specified node, and writes it to STDOUT.": "检索指定节点的 ssh 密钥路径，并将其写到 STDOUT 。",
	"Retrieves the IP address of the running cluster": "检索正在运行的群集的 IP 地址",
	"Retrieves the IP address of the running cluster, checks it\n\t\t\twith IP in kubeconfig, and corrects kubeconfig if incorrect.": "检索运行集群的 IP 地址，将其与 kubeconfig 中的 IP 进行比较，并在有误时纠正 kubeconfig。",
	"Retrieves the IP address of the specified node": "检索指定节点的IP地址",
	"Retrieves the IP address of the specified node, and writes it to STDOUT.": "检索指定节点的IP地址，并将其写到 STDOUT 。",
	"Returns a URL to connect to a service": "返回用于连接到 service 的 URL",
	"Returns logs to debug a local Kubernetes cluster": "返回用于调试本地 Kubernetes 集群的日志",
	"Returns the Kubernetes URL(s) for service(s) in your local cluster. In the case of multiple URLs they will be printed one at a time.": "返回本地集群中服务的 Kubernetes URL。如果存在多个 URL，则每次将打印一个 URL。",
	"Returns the value of PROPERTY_NAME from the minikube config file.  Can be overwritten at runtime by flags or environmental variables.": "从 minikube 配置文件返回 PROPERTY_NAME 的值。可以在运行时通过标志或环境变量进行覆盖。",
	"Right-click the PowerShell icon and select Run as Administrator to open PowerShell in elevated mode.": "右键单击 PowerShell 图标, 然后选择以管理员身份运行以在 elevated 模式下打开 PowerShell。",
	"Run 'kubectl describe pod coredns -n kube-system' and check for a firewall or DNS conflict": "运行 'kubectl describe pod coredns -n kube-system' 并检查防火墙或 DNS 冲突",
	"Run 'minikube delete' to delete the stale VM, or and ensure that minikube is running as the same user you are issuing this command with": "执行 'minikube delete' 以删除过时的虚拟机，或者确保 minikube 以与您发出此命令的用户相同的用户身份运行",
	"Run 'sudo sysctl fs.protected_regular=0', or try a driver which does not require root, such as '--driver=docker'": "运行 'sudo sysctl fs.protected_regular=0'，或尝试不需要 root 的驱动程序，例如 '--driver=docker'",
	"Run a kubectl binary matching the cluster version": "运行与集群版本匹配的 kubectl 二进制文件",
	"Run kubectl": "运行 kubectl",
	"Run minikube from the C: drive.": "从 C: 盘运行 minikube。",
	"Run the Kubernetes client, download it if necessary. Remember -- after kubectl!\n\nThis will run the Kubernetes client (kubectl) with the same version as the cluster\n\nNormally it will download a binary matching the host operating system and architecture,\nbut optionally you can also run it directly on the control plane over the ssh connection.\nThis can be useful if you cannot run kubectl locally for some reason, like unsupported\nhost. Please be aware that when using --ssh all paths will apply to the remote machine.": "运行 Kubernetes 客户端，如有必要，请下载。记住 -- 在 kubectl 之后！\n\n这将以与集群相同的版本运行 Kubernetes 客户端 (kubectl)\n\n通常它会下载与主机操作系统和架构匹配的二进制文件，但也可以选择通过 ssh 连接直接在控制平面上运行它。\n如果您由于某些原因无法在本地运行 kubectl（例如不支持的主机），这可能会很有用。请注意，使用 --ssh 时，所有路径都将应用于远程机器。",
	"Run the following:\n$ sudo mkdir -p /etc/systemd/system/user@.service.d\n$ cat \u003c\u003cEOF | sudo tee /etc/systemd/system/user@.service.d/delegate.conf\n[Service]\nDelegate=cpu cpuset io memory pids\nEOF\n$ sudo systemctl daemon-reload": "运行以下命令：\n$ sudo mkdir -p /etc/systemd/system/user@.service.d\n$ cat \u003c\u003cEOF | sudo tee /etc/systemd/system/user@.service.d/delegate.conf\n[Service]\nDelegate=cpu cpuset io memory pids\nEOF\n$ sudo systemctl daemon-reload",
	"Run: 'Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Tools-All -All'": "运行：'Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Tools-All -All'",
	"Run: 'chmod 600 $HOME/.kube/config'": "执行 'chmod 600 $HOME/.kube/config'",
	"Run: 'kubectl delete clusterrolebinding kubernetes-dashboard'": "运行：'kubectl delete clusterrolebinding kubernetes-dashboard'",
	"Run: 'minikube delete --all' to clean up all the abandoned networks.": "运行：'minikube delete --all' 来清理所有被弃用的网络。",
	"Run: 'sudo chown $USER $HOME/.kube/config \u0026\u0026 chmod 600 $HOME/.kube/config'": "运行: 'sudo chown $USER $HOME/.kube/config \u0026\u0026 chmod 600 $HOME/.kube/config'",
	"Run: 'sudo mkdir /sys/fs/cgroup/systemd \u0026\u0026 sudo mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd'": "运行：'sudo mkdir /sys/fs/cgroup/systemd \u0026\u0026 sudo mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd'",
	"Running on localhost (CPUs={{.number_of_cpus}}, Memory={{.memory_size}}MB, Disk={{.disk_size}}MB) ...": "正在本地主机上运行（CPU={{.number_of_cpus}}，内存={{.memory_size}}MB，磁盘={{.disk_size}}MB）...",
	"Running remotely (CPUs={{.number_of_cpus}}, Memory={{.memory_size}}MB, Disk={{.disk_size}}MB) ...": "正在远程运行中（CPU={{.number_of_cpus}}，内存={{.memory_size}}MB，磁盘={{.disk_size}}MB）...",
	"SSH key (ssh driver only)": "SSH 密钥（仅适用于SSH驱动程序）",
	"SSH port (ssh driver only)": "SSH 端口（仅适用于SSH驱动程序）",
	"SSH user (ssh driver only)": "SSH 用户名（仅适用于SSH驱动程序）",
	"Save a image from minikube": "从 minikube 中保存一个镜像",
	"Searching the internet for Kubernetes version...": "在互联网上搜索 Kubernetes 版本...",
	"Select a valid value for --dnsdomain": "为 --dnsdomain 选择一个有效值",
	"Selecting '{{.driver}}' driver from existing profile (alternates: {{.alternates}})": "从现有配置文件中选择 '{{.driver}}' 驱动程序 （可选：{{.alternates}}）",
	"Selecting '{{.driver}}' driver from user configuration (alternates: {{.alternates}})": "从用户配置中选择 {{.driver}}' 驱动程序（可选：{{.alternates}}）",
	"Send trace events. Options include: [gcp]": "发送跟踪事件。包含的选项：[gcp]",
	"Service '{{.service}}' was not found in '{{.namespace}}' namespace.\nYou may select another namespace by using 'minikube service {{.service}} -n \u003cnamespace\u003e'. Or list out all the services using 'minikube service list'": "在 '{{.namespace}}' 命名空间中未找到服务 '{{.service}}'。\n您可以通过使用 'minikube service {{.service}} -n \u003cnamespace\u003e' 选择另一个命名空间。或使用 'minikube service list' 列出所有服务",
	"Services {{.svc_names}} have type \"ClusterIP\" . Minikube allows you to access them only for testing": "{{.svc_names}} 均为 \"ClusterIP\" 类型,正常情况仅供集群内访问。Minikube提供的外部访问手段仅可供测试使用",
	"Services {{.svc_names}} have type \"ClusterIP\" not meant to be exposed, however for local development minikube allows you to access this !": "服务 {{.svc_names}} 的类型为 \"ClusterIP\"，不适合暴露。不过，为了本地开发，Minikube 允许您访问这些服务！",
	"Set a static IP for the minikube cluster, the IP must be: private, IPv4, and the last octet must be between 2 and 254, for example 192.168.200.200 (Docker and Podman drivers only)": "为 minikube 集群设置静态IP，该IP必须是私有IPv4地址，最后一位必须介于2和254之间，例如：192.168.200.200（仅适用于 Docker 和 Podman 驱动程序）",
	"Set failed": "设置失败",
	"Set flag to delete all profiles": "设置标志以删除所有配置文件",
	"Set flag to stop all profiles (clusters)": "设置标志以停止所有配置文件（集群）",
	"Set flag to stop cluster after a set amount of time (e.g. --schedule=5m)": "设置标志以在一定时间后停止集群（例如：--schedule=5m）",
	"Set this flag to delete the '.minikube' folder from your user directory.": "设置这个标志来删除您用户目录下的 '.minikube' 文件夹。",
	"Sets an individual value in a minikube config file": "",
	"Sets the PROPERTY_NAME config value to PROPERTY_VALUE\n\tThese values can be overwritten by flags or environment variables at runtime.": "设置 PROPERTY_NAME 配置值为 PROPERTY_VALUE。这些值可以在运行时被标志或环境变量覆盖。",
	"Sets up docker env variables; similar to '$(docker-machine env)'": "设置 docker env 变量；类似于 '$(docker-machine env)'",
	"Sets up docker env variables; similar to '$(docker-machine env)'.": "设置 docker env 变量；类似于 '$(docker-machine env)'。",
	"Sets up podman env variables; similar to '$(podman-machine env)'": "设置 podman env 变量；类似于 '$(podman-machine env)'",
	"Sets up podman env variables; similar to '$(podman-machine env)'.": "设置 podman env 变量；类似于 '$(podman-machine env)'。",
	"Setting profile failed": "设置配置文件失败",
	"Show a list of global command-line options (applies to all commands).": "显示全局命令行选项列表 (应用于所有命令)。",
	"Show only log entries which point to known problems": "仅显示指向已知问题的日志条目",
	"Show only the audit logs": "仅显示审计日志",
	"Show only the last start logs.": "仅显示最近的启动日志。",
	"Show only the most recent journal entries, and continuously print new entries as they are appended to the journal.": "",
	"Simulate numa node count in minikube, supported numa node count range is 1-8 (kvm2 driver only)": "在 minikube 中模拟 numa 节点数量，支持的 numa 节点数量范围为 1-8 (仅支持 kvm2 驱动程序)",
	"Skipped switching kubectl context for {{.profile_name}} because --keep-context was set.": "跳过切换 {{.profile_name}} 的kubectl 上下文，因为 --keep-context 已设置。",
	"Some dashboard features require the metrics-server addon. To enable all features please run:\n\n\tminikube{{.profileArg}} addons enable metrics-server\t\n\n": "某些 dashboard 功能需要启用 metrics-server 插件。为了启用所有功能，请运行以下命令：\n\n\tminikube{{.profileArg}} addons enable metrics-server\t\n\n",
	"Some dashboard features require the metrics-server addon. To enable all features please run:\n\n\tminikube{{.profileArg}} addons enable metrics-server\n": "",
	"Sorry, Kubernetes {{.k8sVersion}} requires conntrack to be installed in root's path": "抱歉, Kubernetes {{.k8sVersion}} 要求在 root 路径安装 conntrack",
	"Sorry, Kubernetes {{.k8sVersion}} requires crictl to be installed in root's path": "抱歉, Kubernetes {{.k8sVersion}} 要求在 root 路径安装 crictl",
	"Sorry, completion support is not yet implemented for {{.name}}": "抱歉, 尚未完成实现对 {{.name}} 的支持",
	"Sorry, please set the --output flag to one of the following valid options: [text,json]": "抱歉, 请将 --output 标志设置为以下有效选项之一: [text,json]",
	"Sorry, the IP provided with the --listen-address flag is invalid: {{.listenAddr}}.": "抱歉，使用 --listen-address 标志提供的 IP 无效：{{.listenAddr}}。",
	"Sorry, the address provided with the --insecure-registry flag is invalid: {{.addr}}. Expected formats are: \u003cip\u003e[:\u003cport\u003e], \u003chostname\u003e[:\u003cport\u003e] or \u003cnetwork\u003e/\u003cnetmask\u003e": "抱歉，使用 --insecure-registry 标志提供的地址无效：{{.addr}}。预期格式为：\u003cip\u003e[:\u003cport\u003e]、\u003chostname\u003e[:\u003cport\u003e] 或 \u003cnetwork\u003e/\u003cnetmask\u003e",
	"Sorry, the kubeadm.{{.parameter_name}} parameter is currently not supported by --extra-config": "抱歉，--extra-config 目前不支持 kubeadm.{{.parameter_name}} 参数",
	"Sorry, the url provided with the --registry-mirror flag is invalid: {{.url}}": "抱歉，通过 --registry-mirror 标志提供的网址无效：{{.url}}",
	"Sorry, {{.driver}} does not allow mounts to be changed after container creation (previous mount: '{{.old}}', new mount: '{{.new}})'": "抱歉，{{.driver}} 不允许在容器创建后更改挂载（之前的挂载：'{{.old}}'，新挂载：'{{.new}}'）",
	"Source {{.path}} can not be empty": "源路径 {{.path}} 不能为空",
	"Specified Kubernetes version {{.specified}} is less than the oldest supported version: {{.oldest}}. Use `minikube config defaults kubernetes-version` for details.": "",
	"Specified Kubernetes version {{.specified}} is newer than the newest supported version: {{.newest}}. Use `minikube config defaults kubernetes-version` for details.": "指定的 Kubernetes 版本 {{.specified}} 较新，比支持的最新版本 {{.newest}} 还要新。请使用 `minikube config defaults kubernetes-version` 查看详情。",
	"Specified Kubernetes version {{.specified}} not found in Kubernetes version list": "在 Kubernetes 版本列表中找不到指定的 Kubernetes 版本 {{.specified}}",
	"Specified Major version of Kubernetes {{.specifiedMajor}} is newer than the newest supported Major version: {{.newestMajor}}": "",
	"Specify --kubernetes-version in v\u003cmajor\u003e.\u003cminor.\u003cbuild\u003e form. example: 'v1.1.14'": "",
	"Specify an alternate --host-only-cidr value, such as 172.16.0.1/24": "指定备用的 --host-only-cidr 值，例如 172.16.0.1/24",
	"Specify arbitrary flags to pass to the Docker daemon. (format: key=value)": "指定要传递给 Docker 守护进程的任意标志。（格式：key=value）",
	"Specify arbitrary flags to pass to the build. (format: key=value)": "指定传递给构建过程的任意标志。（format: key=value）",
	"Specifying extra disks is currently only supported for the following drivers: {{.supported_drivers}}. If you can contribute to add this feature, please create a PR.": "",
	"StartHost failed, but will try again: {{.error}}": "StartHost 失败，将要重试: {{.error}}",
	"Starting \"{{.node}}\" {{.role}} node in \"{{.cluster}}\" cluster": "在集群中 \"{{.cluster}}\" 启动节点 \"{{.node}}\" {{.role}}",
	"Starting control plane node {{.name}} in cluster {{.cluster}}": "正在集群 {{.cluster}} 中启动控制平面节点 {{.name}}",
	"Starting minikube without Kubernetes in cluster {{.cluster}}": "在集群 {{.cluster}} 中启动 minikube 但不使用 Kubernetes",
	"Starting tunnel for service {{.service}}.": "为服务 {{.service}} 启动隧道。",
	"Starts a local Kubernetes cluster": "启动本地 Kubernetes 集群",
	"Starts a local kubernetes cluster": "启动本地 kubernetes 集群",
	"Starts a node.": "启动一个节点。",
	"Starts an existing stopped node in a cluster.": "在集群中启动一个已停止的现有节点。",
	"Startup with {{.old_driver}} driver failed, trying with alternate driver {{.new_driver}}: {{.error}}": "使用 {{.old_driver}} 驱动程序启动失败，尝试使用备用驱动程序 {{.new_driver}}：{{.error}}",
	"Stopped tunnel for service {{.service}}.": "停止了服务 {{.service}} 的隧道。",
	"Stopping node \"{{.name}}\"  ...": "正在停止节点 \"{{.name}}\" ...",
	"Stopping tunnel for service {{.service}}.": "停止服务 {{.service}} 的隧道。",
	"Stops a local Kubernetes cluster. This command stops the underlying VM or container, but keeps user data intact. The cluster can be started again with the \"start\" command.": "停止本地 Kubernetes 集群。此命令会停止底层的虚拟机或容器，但会保留用户数据。可以使用 \"start\" 命令重新启动集群。",
	"Stops a node in a cluster.": "停止集群中的一个节点。",
	"Stops a running local Kubernetes cluster": "停止正在运行的本地 Kubernetes 集群",
	"Stops a running local kubernetes cluster": "停止正在运行的本地 kubernetes 集群",
	"Subnet to be used on kic cluster. If left empty, minikube will choose subnet address, beginning from 192.168.49.0. (docker and podman driver only)": "在 kic 集群上使用的子网。如果留空，minikube 将从 192.168.49.0 开始选择子网地址。（仅适用于 docker 和 podman 驱动程序）",
	"Successfully added {{.name}} to {{.cluster}}!": "已成功将 {{.name}} 添加到 {{.cluster}}！",
	"Successfully deleted all profiles": "成功删除所有配置文件",
	"Successfully deleted profile \\\"{{.name}}\\\"": "成功删除配置文件 \\\"{{.name}}\\\"",
	"Successfully mounted {{.sourcePath}} to {{.destinationPath}}": "成功将 {{.sourcePath}} 挂载到 {{.destinationPath}}",
	"Successfully powered off Hyper-V. minikube driver -- {{.driver}}": "成功关闭 Hyper-V。minikube 驱动 -- {{.driver}}",
	"Successfully purged minikube directory located at - [{{.minikubeDirectory}}]": "成功清理 [{{.minikubeDirectory}}] 下的 minikube 目录",
	"Successfully started node {{.name}}!": "成功启动节点 {{.name}}！",
	"Successfully stopped node {{.name}}": "成功停止节点 {{.name}}",
	"Successfully unblocked bootpd process from firewall, retrying": "成功解除对 bootpd 进程的防火墙阻止，正在重试...",
	"Suggestion: {{.advice}}": "建议：{{.advice}}",
	"Suggestion: {{.fix}}": "建议：{{.fix}}",
	"System only has {{.size}}MiB available, less than the required {{.req}}MiB for Kubernetes": "系统仅有 {{.size}}MiB 可用，低于 Kubernetes 所需的 {{.req}}MiB。",
	"Tag images": "为镜像打标签",
	"Tag to apply to the new image (optional)": "要应用于新镜像的标签（可选）",
	"Target \u003cremote file path\u003e must be an absolute Path. Relative Path is not allowed (example: \"minikube:/home/docker/copied.txt\")": "目标 \u003c远程文件路径\u003e 必须是绝对路径。不允许使用相对路径（例如：\"minikube:/home/docker/copied.txt\"）",
	"Target directory {{.path}} must be an absolute path": "目标目录 {{.path}} 必须是绝对路径",
	"Target {{.path}} can not be empty": "目标 {{.path}} 不能为空",
	"Test docs have been saved at - {{.path}}": "测试文档已保存在 - {{.path}}",
	"The \"{{.driver_name}}\" driver requires root privileges. Please run minikube using 'sudo minikube --vm-driver={{.driver_name}}": "“{{.driver_name}}”驱动程序需要根权限。请使用“sudo minikube --vm-driver={{.driver_name}}”运行 minikube",
	"The \"{{.driver_name}}\" driver should not be used with root privileges.": "{{.driver_name}} 驱动不应使用 root 权限。",
	"The \"{{.driver_name}}\" driver should not be used with root privileges. If you wish to continue as root, use --force.": "\"{{.driver_name}}\" 驱动程序不应与 root 权限一起使用。如果您希望以 root 身份继续，请使用 --force。",
	"The \"{{.name}}\" cluster has been deleted.": "“{{.name}}”集群已删除。",
	"The \"{{.name}}\" cluster has been deleted.__1": "“{{.name}}”集群已删除。",
	"The \"{{.name}}\" container runtime requires CNI": "\"{{.name}}\" 容器运行时需要 CNI",
	"The 'none' driver does not respect the --cpus flag": "'none' 驱动程序不遵循 --cpus 标志",
	"The 'none' driver does not respect the --memory flag": "'none' 驱动程序不遵循 --memory 标志",
	"The 'none' driver is designed for experts who need to integrate with an existing VM": "'none' 驱动程序专为需要与现有虚拟机集成的专业人士而设计。",
	"The 'none' driver provides limited isolation and may reduce system security and reliability.": "“none”驱动程序提供有限的隔离功能，并且可能会降低系统安全性和可靠性。",
	"The '{{.addonName}}' addon is enabled": "启动 '{{.addonName}}' 插件",
	"The '{{.driver}}' driver requires elevated permissions. The following commands will be executed:\n\n{{ .example }}\n": "'{{.driver}}' 驱动程序需要提升权限，将执行以下命令：\n\n{{ .example }}\n",
	"The '{{.driver}}' provider was not found: {{.error}}": "未找到 '{{.driver}}' 驱动程序提供程序：{{.error}}",
	"The '{{.name}} driver does not support multiple profiles: https://minikube.sigs.k8s.io/docs/reference/drivers/none/": "",
	"The '{{.name}}' driver does not respect the --cpus flag": "'{{.name}}' 驱动程序不支持 --cpus 标志",
	"The '{{.name}}' driver does not respect the --memory flag": "'{{.name}}' 驱动程序不支持 --memory 标志",
	"The '{{.name}}' driver does not support --cpus=no-limit": "{{.name}}' 驱动程序不支持 --cpus=no-limit",
	"The '{{.name}}' driver does not support --memory=no-limit": "{{.name}}' 驱动程序不支持 --memory=no-limit",
	"The --image-repository flag you provided contains Scheme: {{.scheme}}, which will be removed automatically": "您提供的 --image-repository 标志包含方案：{{.scheme}}，这将自动移除",
	"The --image-repository flag your provided ended with a trailing / that could cause conflict in kubernetes, removed automatically": "您提供的 --image-repository 标志以尾随 / 结束，可能会在 Kubernetes 中引起冲突，已自动移除",
	"The CIDR to be used for service cluster IPs.": "需要用于服务集群 IP 的 CIDR。",
	"The CIDR to be used for the minikube VM (virtualbox driver only)": "需要用于 minikube 虚拟机的 CIDR（仅限 virtualbox 驱动程序）",
	"The KVM QEMU connection URI. (kvm2 driver only)": "KVM QEMU 连接 URI。（仅限 kvm2 驱动程序）",
	"The KVM default network name. (kvm2 driver only)": "KVM 默认 network 名称（仅适用于 kvm2 驱动程序）",
	"The KVM driver is unable to resurrect this old VM. Please run `minikube delete` to delete it and try again.": "KVM 驱动程序无法恢复此旧 VM。请运行 `minikube delete` 来删除它，然后重试。",
	"The KVM network name. (kvm2 driver only)": "KVM 网络名称。（仅限 kvm2 驱动程序）",
	"The OLM addon has stopped working, for more details visit: https://github.com/operator-framework/operator-lifecycle-manager/issues/2534": "OLM插件已停止工作，有关更多详细信息，请访问: https://github.com/operator-framework/operator-lifecycle-manager/issues/2534",
	"The VM driver crashed. Run 'minikube start --alsologtostderr -v=8' to see the VM driver error message": "VM 驱动程序崩溃。运行 'minikube start --alsologtostderr -v=8' 来查看 VM 驱动程序的错误消息",
	"The VM driver exited with an error, and may be corrupt. Run 'minikube start' with --alsologtostderr -v=8 to see the error": "VM 驱动程序退出时出错，可能已损坏。运行 'minikube start' 并带上 --alsologtostderr -v=8 以查看错误",
	"The VM that minikube is configured for no longer exists. Run 'minikube delete'": "",
	"The ambassador addon has stopped working as of v1.23.0, for more details visit: https://github.com/datawire/ambassador-operator/issues/73": "ambassador 插件自 v1.23.0 起停止工作，更多详情请访问：https://github.com/datawire/ambassador-operator/issues/73",
	"The apiserver listening port": "apiserver 侦听端口",
	"The apiserver name which is used in the generated certificate for kubernetes. This can be used if you want to make the apiserver available from outside the machine": "在为 kubernetes 生成的证书中使用的 apiserver 名称。如果您希望将此 apiserver 设置为可从机器外部访问，则可以使用这组 apiserver 名称",
	"The argument to pass the minikube mount command on start": "用于在启动时传递 minikube 装载命令的参数",
	"The argument to pass the minikube mount command on start.": "传递 minikube mount 命令的参数。",
	"The authoritative apiserver hostname for apiserver certificates and connectivity. This can be used if you want to make the apiserver available from outside the machine": "用于 apiserver 证书和连接的权威 apiserver 主机名。如果您希望使 apiserver 从计算机外部可用，可以使用此选项",
	"The base image to use for docker/podman drivers. Intended for local development.": "Docker/Podman 驱动程序使用的基础映像。用于本地部署。",
	"The certificate hostname provided appears to be invalid (may be a minikube bug, try 'minikube delete')": "提供的证书主机名似乎无效（可能是 minikube 的 bug，请尝试 'minikube delete'）",
	"The cluster dns domain name used in the Kubernetes cluster": "Kubernetes 集群中使用的集群 dns 域名",
	"The cluster dns domain name used in the kubernetes cluster": "kubernetes 集群中使用的集群 dns 域名",
	"The container runtime to be used (docker, crio, containerd)": "需要使用的容器运行时（docker、crio、containerd）",
	"The control plane node must be running for this command": "执行此命令需要运行控制平面节点",
	"The control-plane node {{.name}} apiserver is not running (will try others): (state={{.state}})": "",
	"The control-plane node {{.name}} apiserver is not running: (state={{.state}})": "控制平面节点 {{.name}} 的 apiserver 未运行：（状态={{.state}}）",
	"The control-plane node {{.name}} apiserver is paused": "控制平面节点 {{.name}} apiserver已暂停",
	"The control-plane node {{.name}} apiserver is paused (will try others)": "控制平面节点 {{.name}} apiserver已暂停 (将尝试其他节点)",
	"The control-plane node {{.name}} host does not exist": "控制平面节点 {{.name}} 不存在",
	"The control-plane node {{.name}} host does not exist (will try others)": "控制平面节点 {{.name}} 不存在 (将尝试其他节点)",
	"The control-plane node {{.name}} host is not running (will try others): state={{.state}}": "控制平面节点 {{.name}} 主机未运行（将尝试其他节点）：状态={{.state}}",
	"The control-plane node {{.name}} host is not running: state={{.state}}": "",
	"The cri socket path to be used": "需要使用的 cri 套接字路径",
	"The cri socket path to be used.": "需要使用的 cri 套接字路径。",
	"The docker-env command is incompatible with multi-node clusters. Use the 'registry' add-on: https://minikube.sigs.k8s.io/docs/handbook/registry/": "",
	"The docker-env command is only compatible with the \"docker\" runtime, but this cluster was configured to use the \"{{.runtime}}\" runtime.": "docker-env 命令仅兼容 \"docker\" 运行时，但该集群被配置为使用 \"{{.runtime}}\" 运行时。",
	"The driver '{{.driver}}' is not supported on {{.os}}/{{.arch}}": "{{.os}} 不支持驱动程序“{{.driver}}/{{.arch}}”",
	"The existing \"{{.name}}\" cluster was created using the \"{{.old}}\" driver, which is incompatible with requested \"{{.new}}\" driver.": "",
	"The existing node configuration appears to be corrupt. Run 'minikube delete'": "",
	"The following services are clusterIP services: {{.svc_names}}, which are supposed to be accessable inside the cluster only. Minikube allows you to access them by opening an SSH tunnel, which is only for test purpose and must not be used in production environment": "以下服务为ClusterIP类型:{{.svc_names}}. 这些服务正常情况下只能从集群内部访问。Minikube通过ssh隧道的方式使你可以从本机访问这些服务,但此功能仅供测试用途严禁生产环境中使用",
	"The heapster addon is depreciated. please try to disable metrics-server instead": "",
	"The host does not support filesystem 9p.": "主机不支持 9p 文件系统。",
	"The hyperv virtual switch name. Defaults to first found. (hyperv driver only)": "hyperv 虚拟交换机名称。默认为找到的第一个 hyperv 虚拟交换机。（仅限 hyperv 驱动程序）",
	"The hypervisor does not appear to be configured properly. Run 'minikube start --alsologtostderr -v=1' and inspect the error code": "管理程序似乎配置的不正确。执行 'minikube start --alsologtostderr -v=1' 并且检查错误代码",
	"The image '{{.imageName}}' does not match arch of the container runtime, use a multi-arch image instead": "",
	"The image '{{.imageName}}' was not found; unable to add it to cache.": "",
	"The initial time interval for each check that wait performs in seconds": "等待执行的每次检查的初始时间间隔（以秒为单位）",
	"The kubeadm binary within the Docker container is not executable": "Docker 容器内的 kubeadm 二进制文件不可执行",
	"The kubernetes version that the minikube VM will use (ex: v1.2.3)": "minikube 虚拟机将使用的 kubernetes 版本（例如 v1.2.3）",
	"The machine-driver specified is failing to start. Try running 'docker-machine-driver-\u003ctype\u003e version'": "指定的设备驱动启动失败。尝试执行 'docker-machine-driver-\u003ctype\u003e version'",
	"The minikube VM is offline. Please run 'minikube start' to start it again.": "",
	"The minikube {{.driver_name}} container exited unexpectedly.": "",
	"The minimum required version for podman is \"{{.minVersion}}\". your version is \"{{.currentVersion}}\". minikube might not work. use at your own risk. To install latest version please see https://podman.io/getting-started/installation.html": "podman 的最低要求版本是 \"{{.minVersion}}\"。您的版本是 \"{{.currentVersion}}\"。minikube 可能无法工作，请自行承担风险。要安装最新版本，请参阅 https://podman.io/getting-started/installation.html",
	"The name of the network plugin": "网络插件的名称",
	"The named space to activate after start": "启动后要激活的命名空间",
	"The node to build on. Defaults to the primary control plane.": "要构建的节点，默认为主控制平面",
	"The node to check status for. Defaults to control plane. Leave blank with default format for status on all nodes.": "要检查状态的节点，默认为控制平面。默认格式为所有节点上的状态保留为空",
	"The node to get IP. Defaults to the primary control plane.": "要获取IP的节点，默认为主控制平面",
	"The node to get logs from. Defaults to the primary control plane.": "要从中获取日志的节点，默认为主控制平面",
	"The node to get ssh-key path. Defaults to the primary control plane.": "获取ssh密钥路径的节点，默认为主控制平面",
	"The node to ssh into. Defaults to the primary control plane.": "要ssh访问的节点，默认为主控制平面",
	"The node {{.name}} has ran out of available PIDs.": "节点 {{.name}} 已用完可用PID",
	"The node {{.name}} has ran out of disk space.": "节点 {{.name}} 磁盘空间不足",
	"The node {{.name}} has ran out of memory.": "节点 {{.name}} 内存不足",
	"The node {{.name}} network is not available. Please verify network settings.": "节点 {{.name}} 网络不可用，请检查网络设置",
	"The none driver is not compatible with multi-node clusters.": "'none' 驱动与多节点集群不兼容。",
	"The none driver with Kubernetes v1.24+ and the docker container-runtime requires cri-dockerd.\n\t\t\n\t\tPlease install cri-dockerd using these instructions:\n\n\t\thttps://github.com/Mirantis/cri-dockerd": "Kubernetes v1.24+ 和 docker 容器运行时的 none 驱动需要 cri-dockerd。\n\n请使用以下说明安装 cri-dockerd：\n\n\thttps://github.com/Mirantis/cri-dockerd",
	"The none driver with Kubernetes v1.24+ and the docker container-runtime requires dockerd.\n\t\t\n\t\tPlease install dockerd using these instructions:\n\n\t\thttps://docs.docker.com/engine/install/": "Kubernetes v1.24+ 和 docker 容器运行时的 none 驱动需要 dockerd。\n\n请使用以下说明安装 dockerd：\n\n\thttps://docs.docker.com/engine/install/",
	"The none driver with Kubernetes v1.24+ requires containernetworking-plugins.\n\n\t\tPlease install containernetworking-plugins using these instructions:\n\n\t\thttps://minikube.sigs.k8s.io/docs/faq/#how-do-i-install-containernetworking-plugins-for-none-driver": "",
	"The nvidia-gpu-device-plugin addon is deprecated and it's functionality is merged inside of nvidia-device-plugin addon. It will be removed in a future release. Please use the nvidia-device-plugin addon instead. For more details, visit: https://github.com/kubernetes/minikube/issues/19114.": "",
	"The output format. One of 'json', 'table'": "输出的格式。'json' 或者 'table'",
	"The path on the file system where the docs in markdown need to be saved": "Markdown 文档需要保存的文件系统路径。",
	"The path on the file system where the error code docs in markdown need to be saved": "错误代码文档（markdown 格式）需要保存在文件系统上的路径",
	"The path on the file system where the testing docs in markdown need to be saved": "markdown 测试文档需要保存的文件系统路径",
	"The podman service within '{{.cluster}}' is not active": "'{{.cluster}}' 中的 Podman 服务未激活。",
	"The podman-env command is incompatible with multi-node clusters. Use the 'registry' add-on: https://minikube.sigs.k8s.io/docs/handbook/registry/": "podman-env 命令与多节点集群不兼容。请使用 'registry' 插件：https://minikube.sigs.k8s.io/docs/handbook/registry/",
	"The podman-env command is only compatible with the \"crio\" runtime, but this cluster was configured to use the \"{{.runtime}}\" runtime.": "podman-env 命令仅兼容 \"crio\" 运行时，但该集群被配置为使用 \"{{.runtime}}\" 运行时。",
	"The requested memory allocation of {{.requested}}MiB does not leave room for system overhead (total system memory: {{.system_limit}}MiB). You may face stability issues.": "请求的内存分配 {{.requested}}MiB 不足以留出系统开销的空间（总系统内存：{{.system_limit}}MiB）。可能会遇到稳定性问题。",
	"The service namespace": "service的命名空间",
	"The service/ingress {{.resource}} requires privileged ports to be exposed: {{.ports}}": "service/ingress 的{{.resource}}）需要暴露特权端口：{{.ports}}。",
	"The services namespace": "服务命名空间",
	"The socket_vmnet network is only supported on macOS": "The socket_vmnet network is only supported on macOS",
	"The time interval for each check that wait performs in seconds": "wait 执行每次检查的时间间隔，以秒为单位。",
	"The total number of nodes to spin up. Defaults to 1.": "要启动的节点总数。默认值为 1。",
	"The value passed to --format is invalid": "传递给 --format 的值无效。",
	"The value passed to --format is invalid: {{.error}}": "传递给 --format 的值无效：{{.error}}。",
	"The {{.addon}} addon is only supported with the KVM driver.\n\nFor GPU setup instructions see: https://minikube.sigs.k8s.io/docs/tutorials/nvidia/": "",
	"The {{.driver_name}} driver should not be used with root privileges.": "不应以根权限使用 {{.driver_name}} 驱动程序。",
	"There are a couple ways to enable the required file sharing:\n1. Enable \"Use the WSL 2 based engine\" in Docker Desktop\nor\n2. Enable file sharing in Docker Desktop for the %s%s directory": "",
	"There's a new version for '{{.driver_executable}}'. Please consider upgrading. {{.documentation_url}}": "“{{.driver_executable}}”有一个新版本。请考虑升级。{{.documentation_url}}",
	"These --extra-config parameters are invalid: {{.invalid_extra_opts}}": "",
	"These changes will take effect upon a minikube delete and then a minikube start": "这些更改将在执行 minikube delete 后生效，然后执行 minikube start",
	"Things to try without Kubernetes ...": "没有 Kubernetes 的尝试方法...",
	"This addon does not have an endpoint defined for the 'addons open' command.\nYou can add one by annotating a service with the label {{.labelName}}:{{.addonName}}": "此插件没有为 'addons open' 命令定义端点。\n你可以通过在服务上添加标签 {{.labelName}}:{{.addonName}} 来添加一个端点。",
	"This can also be done automatically by setting the env var CHANGE_MINIKUBE_NONE_USER=true": "此操作还可通过设置环境变量 CHANGE_MINIKUBE_NONE_USER=true 自动完成",
	"This cluster was created before minikube v1.26.0 and doesn't have cri-docker installed. Please run 'minikube delete' and then start minikube again": "此集群是在 minikube v1.26.0 之前创建的，并且未安装 cri-docker。请运行 'minikube delete' 然后重新启动 minikube",
	"This control plane is not running! (state={{.state}})": "此控制平面未运行！（状态={{.state}}）",
	"This driver does not yet work on your architecture. Maybe try --driver=none": "",
	"This is a known issue with BTRFS storage driver, there is a workaround, please checkout the issue on GitHub": "这是 BTRFS 存储驱动程序的已知问题，有一个解决方法，请在 GitHub 上查看此问题",
	"This is unusual - you may want to investigate using \"{{.command}}\"": "这很不寻常 - 您可能想要使用 \"{{.command}}\" 进行调查",
	"This will keep the existing kubectl context and will create a minikube context.": "这将保留现有 kubectl 上下文并创建 minikube 上下文。",
	"This will start the mount daemon and automatically mount files into minikube": "这将启动装载守护进程并将文件自动装载到 minikube 中",
	"This will start the mount daemon and automatically mount files into minikube.": "这将启动装载守护进程并将文件自动装载到 minikube 中。",
	"This {{.type}} is having trouble accessing https://{{.repository}}": "此 {{.type}} 访问 https://{{.repository}} 时遇到问题",
	"Tip: To remove this root owned cluster, run: sudo {{.cmd}}": "提示：要删除此 root 拥有的集群，请运行：sudo {{.cmd}}",
	"Tip: To remove this root owned cluster, run: sudo {{.cmd}} delete": "提示：要移除这个由根用户拥有的集群，请运行 sudo {{.cmd}} delete",
	"To access Headlamp, use the following command:\n\n\tminikube{{.profileArg}} service headlamp -n headlamp\n": "要访问 Headlamp，请使用以下命令：\n\n\tminikube{{.profileArg}} service headlamp -n headlamp\n",
	"To access YAKD - Kubernetes Dashboard, wait for Pod to be ready and run the following command:\n\n\tminikube{{.profileArg}} service yakd-dashboard -n yakd-dashboard\n": "",
	"To connect to this cluster, use:  --context={{.name}}": "",
	"To connect to this cluster, use: kubectl --context={{.name}}": "如需连接到此集群，请使用 kubectl --context={{.name}}",
	"To connect to this cluster, use: kubectl --context={{.name}}__1": "如需连接到此集群，请使用 kubectl --context={{.name}}",
	"To connect to this cluster, use: kubectl --context={{.profile_name}}": "如需连接到此集群，请使用 kubectl --context={{.profile_name}}",
	"To disable beta notices, run: 'minikube config set WantBetaUpdateNotification false'": "要禁用测试版通知，请运行: 'minikube config set WantBetaUpdateNotification false'",
	"To disable this notice, run: 'minikube config set WantUpdateNotification false'\n": "要禁用此通知，请运行：'minikube config set WantUpdateNotification false'",
	"To disable update notices in general, run: 'minikube config set WantUpdateNotification false'\n": "要禁用更新通知，请运行：'minikube config set WantUpdateNotification false'\n",
	"To pull new external images, you may need to configure a proxy: https://minikube.sigs.k8s.io/docs/reference/networking/proxy/": "要获取新的外部镜像，可能需要配置代理：https://minikube.sigs.k8s.io/docs/reference/networking/proxy/",
	"To see addons list for other profiles use: `minikube addons -p name list`": "要查看其他配置文件的插件列表，请使用: `minikube addons -p name list`",
	"To set your Google Cloud project,  run:\n\n\t\tgcloud config set project \u003cproject name\u003e\n\nor set the GOOGLE_CLOUD_PROJECT environment variable.": "要设置您的 Google Cloud 项目，请运行：\n\n\t\tgcloud config set project \u003cproject name\u003e\n\n或设置 GOOGLE_CLOUD_PROJECT 环境变量。",
	"To start a cluster, run: \"{{.command}}\"": "要启动一个集群，请运行： \"{{.command}}\"",
	"To start minikube with Hyper-V, Powershell must be in your PATH`": "要使用 Hyper-V 启动 minikube，Powershell 必须在您的 PATH 中",
	"To use kubectl or minikube commands as your own user, you may need to relocate them. For example, to overwrite your own settings, run:": "如需以您自己的用户身份使用 kubectl 或 minikube 命令，您可能需要重新定位该命令。例如，如需覆盖您的自定义设置，请运行：",
	"Troubleshooting Commands:": "故障排除命令",
	"Try 'minikube delete' to force new SSL certificates to be installed": "尝试 'minikube delete' 强制安装新的 SSL 证书",
	"Try 'minikube delete', and disable any conflicting VPN or firewall software": "尝试 'minikube delete'，并禁用任何冲突的VPN或防火墙软件",
	"Try one or more of the following to free up space on the device:\n\t\n\t\t\t1. Run \"docker system prune\" to remove unused Docker data (optionally with \"-a\")\n\t\t\t2. Increase the storage allocated to Docker for Desktop by clicking on:\n\t\t\t\tDocker icon \u003e Preferences \u003e Resources \u003e Disk Image Size\n\t\t\t3. Run \"minikube ssh -- docker system prune\" if using the Docker container runtime": "尝试以下一种或多种方法以释放设备上的空间：\n\t\n\t\t\t1. 运行 \"docker system prune\" 以删除未使用的 Docker 数据（可选 \"-a\"）\n\t\t\t2. 通过点击以下路径增加分配给 Docker for Desktop 的存储空间：\n\t\t\t\tDocker 图标 \u003e Preferences \u003e Resources \u003e Disk Image Size\n\t\t\t3. 如果使用 Docker 容器运行时，运行 \"minikube ssh -- docker system prune\"",
	"Try one or more of the following to free up space on the device:\n\t\n\t\t\t1. Run \"sudo podman system prune\" to remove unused podman data\n\t\t\t2. Run \"minikube ssh -- docker system prune\" if using the Docker container runtime": "",
	"Trying to delete invalid profile {{.profile}}": "尝试删除无效的配置文件 {{.profile}}",
	"Tunnel successfully started": "隧道成功启动",
	"Unable to bind flags": "无法绑定标志",
	"Unable to create dedicated network, this might result in cluster IP change after restart: {{.error}}": "无法创建专用网络，这可能会导致重启后集群 IP 发生变化：{{.error}}",
	"Unable to delete profile(s): {{.error}}": "无法删除配置文件: {{.error}}",
	"Unable to detect the latest patch release for specified major.minor version v{{.majorminor}}": "无法检测到指定主次版本 v{{.majorminor}} 的最新补丁版本。",
	"Unable to determine a default driver to use. Try specifying --vm-driver, or see https://minikube.sigs.k8s.io/docs/start/": "无法确定要使用的默认驱动。尝试通过 --vm-dirver 指定，或者查阅 https://minikube.sigs.k8s.io/docs/start/",
	"Unable to enable dashboard": "无法启用仪表盘",
	"Unable to fetch latest version info": "无法获取最新版本信息",
	"Unable to find any control-plane nodes": "无法找到任何控制平面节点",
	"Unable to find control plane": "无法找到控制平面",
	"Unable to generate docs": "无法生成文档",
	"Unable to generate the documentation. Please ensure that the path specified is a directory, exists \u0026 you have permission to write to it.": "无法生成文档。请确保指定的路径是一个目录，存在 \u0026 您有权限写入它。",
	"Unable to get CPU info: {{.err}}": "无法获取 CPU 信息: {{.err}}",
	"Unable to get bootstrapper: {{.error}}": "无法获取引导程序：{{.error}}",
	"Unable to get command runner": "无法获取命令执行器",
	"Unable to get control plane status: {{.error}}": "无法获取控制平面状态：{{.error}}",
	"Unable to get control-plane node {{.name}} apiserver status (will try others): {{.error}}": "无法获取控制平面节点 {{.name}} apiserver 的状态 (将尝试其他节点): {{.error}}",
	"Unable to get control-plane node {{.name}} apiserver status: {{.error}}": "无法获取控制平面节点 {{.name}} apiserver 的状态: {{.error}}",
	"Unable to get control-plane node {{.name}} endpoint (will try others): {{.err}}": "无法获取控制平面节点 {{.name}} endpoint 的状态 (将尝试其他节点): {{.err}}",
	"Unable to get control-plane node {{.name}} endpoint: {{.err}}": "无法获取控制平面节点 {{.name}} endpoint 的状态: {{.err}}",
	"Unable to get control-plane node {{.name}} host command runner (will try others): {{.err}}": "无法获取控制平面节点 {{.name}} 主机运行命令的状态 (将尝试其他节点): {{.err}}",
	"Unable to get control-plane node {{.name}} host command runner: {{.err}}": "无法获取控制平面节点 {{.name}} 主机运行命令 的状态: {{.err}}",
	"Unable to get control-plane node {{.name}} host status (will try others): {{.err}}": "无法获取控制平面节点 {{.name}}  主机的状态 (将尝试其他节点): {{.err}}",
	"Unable to get control-plane node {{.name}} host status: {{.err}}": "无法获取控制平面节点 {{.name}} 主机状态：{{.err}}",
	"Unable to get current user": "无法获取当前用户",
	"Unable to get forwarded endpoint": "无法获取转发的端点",
	"Unable to get machine status": "获取机器状态失败",
	"Unable to get runtime": "无法获取运行时",
	"Unable to get the status of the {{.name}} cluster.": "无法获取 {{.name}} 集群状态。",
	"Unable to kill mount process: {{.error}}": "无法终止挂载进程：{{.error}}",
	"Unable to list profiles: {{.error}}": "无法列出配置文件: {{.error}}",
	"Unable to load cached images from config file.": "无法从配置文件中加载缓存的镜像。",
	"Unable to load cached images: {{.error}}": "无法加载缓存的镜像：{{.error}}",
	"Unable to load config: {{.error}}": "无法加载配置：{{.error}}",
	"Unable to load control-plane node {{.name}} host (will try others): {{.err}}": "无法加载控制平台节点主机 {{.name}}(将尝试其他主机): {{.err}}",
	"Unable to load control-plane node {{.name}} host: {{.err}}": "无法加载控制平台节点主机 {{.name}}: {{.err}}",
	"Unable to load profile: {{.error}}": "无法加载配置文件: {{.error}}",
	"Unable to parse \"{{.kubernetes_version}}\": {{.error}}": "无法解析“{{.kubernetes_version}}”：{{.error}}",
	"Unable to parse default Kubernetes version from constants: {{.error}}": "无法从常量中解析默认的 Kubernetes 版本号： {{.error}}",
	"Unable to parse memory '{{.memory}}': {{.error}}": "",
	"Unable to parse oldest Kubernetes version from constants: {{.error}}": "无法从常量中解析最旧的 Kubernetes 版本号： {{.error}}",
	"Unable to parse version.json: {{.error}}, json: {{.json}}": "无法解析 version.json: {{.error}}, json: {{.json}}",
	"Unable to pick a default driver. Here is what was considered, in preference order:": "无法选择默认驱动程序。以下是按优先顺序考虑的内容：",
	"Unable to pull images, which may be OK: {{.error}}": "无法拉取镜像，有可能是正常状况：{{.error}}",
	"Unable to push cached images: {{.error}}": "无法推送缓存镜像: {{.error}}",
	"Unable to remove machine directory": "无法删除machine目录",
	"Unable to restart cluster, will reset it: {{.error}}": "无法重启集群，将进行重置：{{.error}}",
	"Unable to restart control-plane node(s), will reset cluster: {{.error}}": "无法重启 control-plane 节点，将重置集群: {{.error}}",
	"Unable to safely downgrade existing Kubernetes v{{.old}} cluster to v{{.new}}": "无法安全地将现有的 Kubernetes v{{.old}} 集群降级为 v{{.new}}",
	"Unable to start VM. Please investigate and run 'minikube delete' if possible": "无法启动虚拟机。可能的话请检查后执行 'minikube delete'",
	"Unable to stop VM": "无法停止虚拟机",
	"Unable to update {{.driver}} driver: {{.error}}": "无法更新 {{.driver}} 驱动: {{.error}}",
	"Unable to verify SSH connectivity: {{.error}}. Will retry...": "无法验证 SSH 连接： {{.error}}。即将重试...",
	"Unfortunately, could not download the base image {{.image_name}} ": "很遗憾，无法下载基础镜像 {{.image_name}}",
	"Uninstalling Kubernetes {{.kubernetes_version}} using {{.bootstrapper_name}} ...": "正在使用 {{.bootstrapper_name}} 卸载 Kubernetes {{.kubernetes_version}}…",
	"Unmounting {{.path}} ...": "取消挂载 {{.path}} ...",
	"Unpause": "取消暂停",
	"Unpaused {{.count}} containers": "已取消暂停 {{.count}} 个容器",
	"Unpaused {{.count}} containers in: {{.namespaces}}": "已取消暂停在命名空间：{{.namespaces}} 中 {{.count}} 个容器",
	"Unpausing node {{.name}} ... ": "取消暂停节点 {{.name}} ...",
	"Unset the KUBECONFIG environment variable, or verify that it does not point to an empty or otherwise invalid path": "取消 KUBECONFIG 环境变量的设置，或者验证它没有指向空路径或无效路径",
	"Unset variables instead of setting them": "取消设置变量，而不是设置它们",
	"Update Docker to the latest minor version, this version is unsupported": "将 Docker 更新到最新的小版本，此版本不受支持",
	"Update kubeconfig in case of an IP or port change": "IP或端口更改的情况下更新 kubeconfig 配置文件",
	"Update server returned an empty list": "更新服务器返回了一个空列表",
	"Updating the running {{.driver_name}} \"{{.cluster}}\" {{.machine_type}} ...": "正在更新运行中的 {{.driver_name}} \"{{.cluster}}\" {{.machine_type}} ...",
	"Upgrade to QEMU v3.1.0+, run 'virt-host-validate', or ensure that you are not running in a nested VM environment.": "升级到 QEMU v3.1.0+，运行 'virt-host-validate'，或者确保您不是在嵌套的 VM 环境中运行",
	"Upgrading from Kubernetes {{.old}} to {{.new}}": "正在从 Kubernetes {{.old}} 升级到 {{.new}}",
	"Usage": "使用方法",
	"Usage: minikube completion SHELL": "使用方法：minikube completion SHELL",
	"Usage: minikube delete": "使用方法：minikube delete",
	"Usage: minikube delete --all --purge": "使用方法：minikube delete --all --purge",
	"Usage: minikube node [add|start|stop|delete]": "使用方法：minikube node [add|start|stop|delete]",
	"Usage: minikube node [add|start|stop|delete|list]": "用法：minikube node [add|start|stop|delete|list]",
	"Usage: minikube node delete [name]": "用法：minikube node delete [name]",
	"Usage: minikube node list": "用法：minikube node list",
	"Usage: minikube node start [name]": "用法：minikube node start [name]",
	"Usage: minikube node stop [name]": "用法：minikube node stop [name]",
	"Use \"{{.CommandPath}} [command] --help\" for more information about a command.": "使用 \"{{.CommandPath}} [command] --help\" 可以获取有关命令的更多信息",
	"Use 'kubectl get po -A' to find the correct and namespace name": "使用 'kubectl get po -A' 来查询正确的命名空间名称",
	"Use -A to specify all namespaces": "使用 -A 指定所有 namespaces",
	"Use SSH connection instead of HTTPS (port 2376)": "使用 SSH 连接而不是 HTTPS 连接（端口2376）",
	"Use SSH for running kubernetes client on the node": "使用 SSH 在节点上运行 kubernetes 客户端",
	"Use VirtualBox to remove the conflicting VM and/or network interfaces": "使用 VirtualBox 删除有冲突的 虚拟机 和/或 网络接口",
	"Use native Golang SSH client (default true). Set to 'false' to use the command line 'ssh' command when accessing the docker machine. Useful for the machine drivers when they will not start with 'Waiting for SSH'.": "使用原生的Golang SSH客户端（默认为true）。将其设置为 'false' 以在访问 Docker 机器时使用命令行的 'ssh' 命令。对于那些不以 'Waiting for SSH' 开头的机器驱动程序来说非常有用。",
	"User ID:      {{.userID}}": "用户 ID：      {{.userID}}",
	"User name '{{.username}}' is not valid": "用户名 '{{.username}}' 不是有效的",
	"User name must be 60 chars or less.": "用户名必须为 60 个字符或更少。",
	"Userspace file server is shutdown": "用户空间文件服务器已关闭",
	"Userspace file server: ": "用户空间文件服务器",
	"Using Kubernetes v1.24+ with the Docker runtime requires cri-docker to be installed": "基于 Docker 运行时使用 Kubernetes v1.24+ 需要安装 cri-doker",
	"Using Kubernetes {{.version}} since patch version was unspecified": "使用 Kubernetes {{.version}}，因为未指定修补程序版本",
	"Using image repository {{.name}}": "正在使用镜像存储库 {{.name}}",
	"Using image {{.registry}}{{.image}}": "正在使用镜像 {{.registry}}{{.image}}",
	"Using image {{.registry}}{{.image}} (global image repository)": "使用镜像 {{.registry}}{{.image}}（全局镜像仓库）",
	"Using rootless Docker driver was required, but the current Docker does not seem rootless. Try 'docker context use rootless' .": "使用 rootless Docker 驱动是必需的，但当前的 Docker 似乎不是 rootless 的。尝试 'docker context use rootless' 。",
	"Using rootless driver was required, but the current driver does not seem rootless": "使用 rootless Docker 驱动是必需的，但当前的驱动似乎不是 rootless 的",
	"Using rootless {{.driver_name}} driver": "使用 rootless {{.driver_name}} 驱动",
	"Using the '{{.runtime}}' runtime with the 'none' driver is an untested configuration!": "同时使用 'none' 驱动以及 '{{.runtime}}' 运行时是未经测试过的配置！",
	"Using the docker-env command with the containerd runtime is a highly experimental feature, please provide feedback or contribute to make it better": "在 containerd 运行时中使用 docker-env 命令是一个高度实验性的功能，请提供反馈或贡献以使其更好",
	"Using the running {{.driver_name}} \"{{.profile_name}}\" VM ...": "使用正在运行的 {{.driver_name}} \"{{.profile_name}}\" 虚拟机",
	"Using the {{.driver}} driver based on existing profile": "根据现有的配置文件使用 {{.driver}} 驱动程序",
	"Using the {{.driver}} driver based on user configuration": "根据用户配置使用 {{.driver}} 驱动程序",
	"Using {{.driver_name}} driver with root privileges": "使用具有 root 权限的 {{.driver_name}} 驱动程序",
	"VM driver is one of: %v": "虚拟机驱动程序是以下项之一：%v",
	"VM is unable to access {{.repository}}, you may need to configure a proxy or set --image-repository": "虚拟机无权访问 {{.repository}}，或许您需要配置代理或者设置 --image-repository",
	"VM may be unable to resolve external DNS records": "虚拟机可能无法解析外部 DNS 记录",
	"Valid components are: {{.valid_extra_opts}}": "有效的组件包括：{{.valid_extra_opts}}",
	"Validate your KVM networks. Run: virt-host-validate and then virsh net-list --all": "验证您的 KVM 网络。运行：virt-host-validate，然后运行 virsh net-list --all",
	"Verify that your HTTP_PROXY and HTTPS_PROXY environment variables are set correctly.": "验证是否正确设置了 HTTP_PROXY 和 HTTPS_PROXY 环境变量。",
	"Verify the IP address of the running cluster in kubeconfig.": "在 kubeconfig 中验证正在运行的集群 IP 地址。",
	"Verifying Kubernetes components...": "正在验证 Kubernetes 组件...",
	"Verifying dashboard health ...": "正在验证 dashboard 运行情况 ...",
	"Verifying proxy health ...": "正在验证 proxy 运行状况 ...",
	"Verifying {{.addon_name}} addon...": "正在验证 {{.addon_name}} 插件...",
	"Verifying:": "正在验证:",
	"Version:      {{.version}}": "版本：      {{.version}}",
	"VirtualBox and Hyper-V are having a conflict. Use '--driver=hyperv' or disable Hyper-V using: 'bcdedit /set hypervisorlaunchtype off'": "VirtualBox 和 Hyper-V 存在冲突。 使用 '--driver=hyperv' 参数或者使用一下命令禁用 Hyper-V : 'bcdedit /set hypervisorlaunchtype off'",
	"VirtualBox cannot create a network, probably because it conflicts with an existing network that minikube no longer knows about. Try running 'minikube delete'": "VirtualBox 无法创建网络，可能是因为该网络与现有网络冲突，而 Minikube 不知道该网络的存在。请运行以下命令以删除冲突的网络：'minikube delete'",
	"VirtualBox is broken. Disable real-time anti-virus software, reboot, and reinstall VirtualBox if the problem continues.": "VirtualBox 出现问题。禁用实时防病毒软件，重新启动，并在问题继续时重新安装 VirtualBox。",
	"VirtualBox is broken. Reinstall VirtualBox, reboot, and run 'minikube delete'.": "VirtualBox 损坏。重新安装 VirtualBox，重启并运行 'minikube delete'。",
	"VirtualBox is unable to find its network interface. Try upgrading to the latest release and rebooting.": "VirtualBox 无法找到他的网络接口。尝试升级到最新版本并重启。",
	"Virtualization support is disabled on your computer. If you are running minikube within a VM, try '--driver=docker'. Otherwise, consult your systems BIOS manual for how to enable virtualization.": "您的计算机禁用了虚拟化支持。如果您正在虚拟机内运行 minikube, 尝试 '--driver=docker'。否则，请参阅系统BIOS手册了解如何启用虚拟化。",
	"Virtualization support is disabled on your computer. If you are running minikube within a VM, try '--vm-driver=none'. Otherwise, consult your systems BIOS manual for how to enable virtualization.": "您的计算机禁用了虚拟化支持。如果您正在虚拟机内运行 minikube, 尝试 '--vm-driver=none'。否则，请参阅系统BIOS手册了解如何启用虚拟化。",
	"Wait failed: {{.error}}": "等待失败：{{.error}}",
	"Wait until Kubernetes core services are healthy before exiting": "等到 Kubernetes 核心服务正常运行再退出",
	"Waiting for cluster to come online ...": "等待集群上线...",
	"Waiting for the host to be provisioned ...": "等待主机就绪...",
	"Want kubectl {{.version}}? Try 'minikube kubectl -- get pods -A'": "想要使用 kubectl {{.version}} 吗？尝试使用 'minikube kubectl -- get pods -A' 命令",
	"Warning: Your kubectl is pointing to stale minikube-vm.\\nTo fix the kubectl context, run `minikube update-context`": "警告：您的 kubectl 指向了过时的 minikube-vm。执行 `minikube update-context` 来修复 kubectl 上下文。",
	"Where to root the NFS Shares, defaults to /nfsshares (hyperkit driver only)": "NFS 共享的根目录位置，默认为 /nfsshares（仅限 hyperkit 驱动程序）",
	"Whether to use external switch over Default Switch if virtual switch not explicitly specified. (hyperv driver only)": "是否在未显式指定虚拟开关时使用外部开关而不是默认开关。仅适用于 hyperv 驱动程序。",
	"With --network-plugin=cni, you will need to provide your own CNI. See --cni flag as a user-friendly alternative": "使用 --network-plugin=cni，您需要提供自己的 CNI。查看 --cni 标志作为用户友好的替代方法",
	"You appear to be using a proxy, but your NO_PROXY environment does not include the minikube IP ({{.ip_address}}).": "您似乎在使用代理，但您的 NO_PROXY 环境不包含 minikube IP ({{.ip_address}})。",
	"You appear to be using a proxy, but your NO_PROXY environment does not include the minikube IP ({{.ip_address}}). Please see {{.documentation_url}} for more details": "您似乎正在使用代理，但您的 NO_PROXY 环境不包含 minikube IP ({{.ip_address}})。如需了解详情，请参阅 {{.documentation_url}}",
	"You are trying to run a windows .exe binary inside WSL. For better integration please use a Linux binary instead (Download at https://minikube.sigs.k8s.io/docs/start/.). Otherwise if you still want to do this, you can do it using --force": "您正在尝试在 WSL 中运行 Windows .exe 二进制文件。为了更好的集成，请改为使用 Linux 二进制文件（在 https://minikube.sigs.k8s.io/docs/start/ 下载）。如果仍然想要执行此操作，您可以使用 --force。",
	"You are trying to run the amd64 binary on an M1 system.\nPlease consider running the darwin/arm64 binary instead.\nDownload at {{.url}}": "你正在尝试在 M1 系统上运行 amd64 二进制文件。\n请考虑改用 darwin/arm64 二进制文件。\n下载地址：{{.url}}",
	"You are using the QEMU driver without a dedicated network, which doesn't support `minikube service` \u0026 `minikube tunnel` commands.": "",
	"You can create one using 'minikube start'.\n\t\t": "您可以使用 'minikube start' 创建一个.\n\t\t",
	"You can delete them using the following command(s): ": "您可以使用以下命令删除他们：",
	"You can force an unsupported Kubernetes version via the --force flag": "你可以通过 --force 标志强制使用不支持的 Kubernetes 版本",
	"You cannot add or remove extra disks for an existing minikube cluster. Please first delete the cluster.": "您不能为已存在的 minikube 集群添加或删除额外的磁盘。请先删除集群。",
	"You cannot change the CPUs for an existing minikube cluster. Please first delete the cluster.": "您不能对已存在的 minikube 集群修改 CPU。请先删除集群。",
	"You cannot change the disk size for an existing minikube cluster. Please first delete the cluster.": "您不能更改现有 minikube 集群的磁盘大小。请先删除集群。",
	"You cannot change the memory size for an existing minikube cluster. Please first delete the cluster.": "您无法更改现有 minikube 集群的内存大小。请先删除集群。",
	"You cannot change the number of nodes for an existing minikube cluster. Please use 'minikube node add' to add nodes to an existing cluster.": "您不能更改现有 minikube 集群的节点数。请使用 'minikube node add' 向现有集群添加节点。",
	"You cannot change the static IP of an existing minikube cluster. Please first delete the cluster.": "您不能更改现有 minikube 集群的静态 IP。请先删除集群。",
	"You cannot enable addons on a cluster without Kubernetes, to enable Kubernetes on your cluster, run: minikube start --kubernetes-version=stable": "您不能在没有 Kubernetes 的集群上启用插件，要在你的集群上启用 Kubernetes，运行:minikube start --kubernetes-version=stable",
	"You have authenticated with a service account that does not have an associated JSON file. The GCP Auth addon requires credentials with a JSON file in order to continue.": "您已经使用一个没有关联 JSON 文件的服务帐户进行了身份验证。GCP 认证插件需要凭据和 JSON 文件才能继续。",
	"You have chosen to disable the CNI but the \"{{.name}}\" container runtime requires CNI": "您已选择禁用 CNI，但是 {{.name}} 容器运行时需要 CNI",
	"You have selected \"virtualbox\" driver, but there are better options !\nFor better performance and support consider using a different driver: {{.drivers}}\n\nTo turn off this warning run:\n\n\t$ minikube config set WantVirtualBoxDriverWarning false\n\n\nTo learn more about on minikube drivers checkout https://minikube.sigs.k8s.io/docs/drivers/\nTo see benchmarks checkout https://minikube.sigs.k8s.io/docs/benchmarks/cpuusage/\n\n": "",
	"You may need to manually remove the \"{{.name}}\" VM from your hypervisor": "您可能需要从管理程序中手动移除“{{.name}}”虚拟机",
	"You may need to stop the Hyper-V Manager and run `minikube delete` again.": "您可能需要停止 Hyper-V 管理器并再次运行 `minikube delete`。",
	"You might be using an amd64 version of minikube on a Apple Silicon Mac, use the arm64 version of minikube instead": "您可能在 Apple Silicon Mac 上使用了 amd64 版本的 minikube，请使用 arm64 版本的 minikube",
	"You must specify service name(s) or --all": "您必须指定服务的名称或 --all",
	"Your GCP credentials will now be mounted into every pod created in the {{.name}} cluster.": "你的 GCP 凭证现在将被挂载到 {{.name}} 集群中创建的每个 Pod 中。",
	"Your cgroup does not allow setting memory.": "您的 cgroup 不允许设置内存",
	"Your firewall is blocking bootpd which is required for socket_vmnet. The following commands will be executed to unblock bootpd:\n\n{{.commands}}\n": "您的防火墙正在阻止 socket_vmnet 所需的 bootpd。将执行以下命令来解除对 bootpd 的阻塞：\n\n{{.commands}}\n",
	"Your firewall is blocking bootpd which is required for this configuration. The following commands will be executed to unblock bootpd:\n\n{{.commands}}\n": "",
	"Your firewall is likely blocking bootpd, to unblock it run:\n\tsudo /usr/libexec/ApplicationFirewall/socketfilterfw --add /usr/libexec/bootpd\n\tsudo /usr/libexec/ApplicationFirewall/socketfilterfw --unblock /usr/libexec/bootpd": "您的防火墙可能阻止了 bootpd，要解除阻止，请运行：\n\tsudo /usr/libexec/ApplicationFirewall/socketfilterfw --add /usr/libexec/bootpd\n\tsudo /usr/libexec/ApplicationFirewall/socketfilterfw --unblock /usr/libexec/bootpd",
	"Your host does not support KVM virtualization. Ensure that qemu-kvm is installed, and run 'virt-host-validate' to debug the problem": "您的主机不支持 KVM 虚拟化。确保已安装 qemu-kvm，并运行 'virt-host-validate' 来调试问题",
	"Your host does not support virtualization. If you are running minikube within a VM, try '--driver=docker'. Otherwise, enable virtualization in your BIOS": "你的主机不支持虚拟化。如果你在虚拟机内运行 minikube，请尝试使用 '--driver=docker'。否则，请在 BIOS 中启用虚拟化",
	"Your host is failing to route packets to the minikube VM. If you have VPN software, try turning it off or configuring it so that it does not re-route traffic to the VM IP. If not, check your VM environment routing options.": "您的主机未能将数据包路由到 minikube VM。如果您有 VPN 软件，请尝试关闭它或将其配置为不重新路由到 VM IP。如果没有，请检查您的 VM 环境路由选项。",
	"Your minikube config refers to an unsupported driver. Erase ~/.minikube, and try again.": "您的 minikube 配置引用了一个不受支持的驱动程序。删除 ~/.minikube，然后重试。",
	"Your minikube vm is not running, try minikube start.": "您的 minikube 虚拟机未运行，请尝试运行 minikube start。",
	"Your user lacks permissions to the minikube profile directory. Run: 'sudo chown -R $USER $HOME/.minikube; chmod -R u+wrx $HOME/.minikube' to fix": "您的用户缺少 minikube 配置文件目录的权限。运行:'sudo chown -R $USER $HOME/.minikube; chmod -R u+wrx $HOME/.minikube' 来修复",
	"[WARNING] For full functionality, the 'csi-hostpath-driver' addon requires the 'volumesnapshots' addon to be enabled.\n\nYou can enable 'volumesnapshots' addon by running: 'minikube addons enable volumesnapshots'\n": "[警告] 为了实现完整功能，'csi-hostpath-driver' 插件需要启用 'volumesnapshots' 插件。\n\n您可以通过运行 'minikube addons enable volumesnapshots' 来启用 'volumesnapshots' 插件。",
	"addon '{{.name}}' is currently not enabled.\nTo enable this addon run:\nminikube addons enable {{.name}}": "插件 '{{.name}}' 当前未启用。\n要启用此插件，请运行：minikube addons enable {{.name}}",
	"addon '{{.name}}' is not a valid addon packaged with minikube.\nTo see the list of available addons run:\nminikube addons list": "插件 '{{.name}}' 不是 minikube 打包的有效插件。\n要查看可用插件列表，请运行：minikube addons list",
	"addon enable failed": "启用插件失败",
	"addons modifies minikube addons files using subcommands like \"minikube addons enable dashboard\"": "插件使用诸如 \"minikube addons enable dashboard\" 的子命令修改 minikube 的插件文件",
	"arm64 VM drivers do not currently support the crio container runtime. See https://github.com/kubernetes/minikube/issues/14146 for details.": "arm64 VM 驱动程序目前不支持 crio 容器运行时。详情请参见：https://github.com/kubernetes/minikube/issues/14146。",
	"auto-pause addon is an alpha feature and still in early development. Please file issues to help us make it better.": "auto-pause 插件是一个 Alpha 版功能，仍处于早期开发阶段。请提交问题以帮助我们改进它。",
	"bash completion failed": "bash 自动补全失败",
	"bash completion.": "bash 自动补全",
	"call with cleanup=true to remove old tunnels": "使用 cleanup=true 参数调用以删除旧的隧道",
	"cancel any existing scheduled stop requests": "取消任何已存在的计划停止请求",
	"cannot specify --kubernetes-version with --no-kubernetes,\nto unset a global config run:\n\n$ minikube config unset kubernetes-version": "不能同时指定 --kubernetes-version 和 --no-kubernetes，要取消全局配置，请运行：$ minikube config unset kubernetes-version",
	"config modifies minikube config files using subcommands like \"minikube config set driver kvm2\"\nConfigurable fields: \n\n": "config 使用子命令（如 \"minikube config set driver kvm2\"）修改 minikube 配置文件。\n可配置字段：",
	"config view failed": "配置查看失败",
	"dashboard": "仪表盘",
	"dashboard service is not running: {{.error}}": "dashboard 服务未运行：{{.error}}",
	"delete ctx": "删除上下文",
	"deleting node": "正在删除节点",
	"disable failed": "禁用失败",
	"dry-run mode. Validates configuration, but does not mutate system state": "dry-run 模式。仅验证配置，不改变系统状态",
	"dry-run validation complete!": "dry-run 验证完成！",
	"enable failed": "开启失败",
	"enabled failed": "开启失败",
	"error creating clientset": "clientset 创建失败",
	"error creating urls": "url 创建失败",
	"error fetching Kubernetes version list from GitHub": "",
	"error getting control-plane node": "",
	"error getting defaults: {{.error}}": "获取默认值时出错: {{.error}}",
	"error getting primary control plane": "获取主控制平面时出错",
	"error getting ssh port": "获取 ssh 端口号时出错",
	"error initializing tracing: {{.Error}}": "初始化 trace 时出错: {{.Error}}",
	"error parsing the input ip address for mount": "",
	"error provisioning guest": "错误的虚拟机配置",
	"error starting tunnel": "启动隧道时出错",
	"error: --output must be 'text', 'yaml' or 'json'": "错误: --output 必须是 'text', 'yaml' 或 'json'",
	"error: --output must be 'yaml' or 'json'": "错误: --output 必须是 'yaml' 或 'json'",
	"experimental": "实验性功能",
	"failed to acquire lock due to unexpected error": "由于意外错误，无法获取锁",
	"failed to add node": "添加节点失败",
	"failed to load profile: {{.error}}": "",
	"failed to open browser: {{.error}}": "打开浏览器失败：{{.error}}",
	"failed to restart auto-pause: {{.error}}": "",
	"failed to save config": "保存配置失败",
	"failed to set extra option": "设置额外选项失败",
	"failed to start node": "启动节点失败",
	"false": "false",
	"fish completion failed": "fish 完成失败",
	"fish completion.": "fish 完成。",
	"if true, will embed the certs in kubeconfig.": "如果为 true，将在 kubeconfig 中嵌入证书。",
	"if you want to create a profile you can by this command: minikube start -p {{.profile_name}}": "如果你想创建一个配置文件，你可以执行此命令：minikube start -p {{.profile_name}}",
	"initialization failed, will try again: {{.error}}": "初始化失败，将再次重试：{{.error}}",
	"invalid kubernetes version": "无效的 Kubernetes 版本",
	"ip not found": "找不到对应的 IP",
	"json encoding failure": "JSON 编码失败",
	"keep the kube-context active after cluster is stopped. Defaults to false.": "在集群停止后保持 kube-context 处于活动状态。默认值为 false。",
	"kubeadm certificates have expired. Generating new ones...": "kubeadm 证书已经过期。正在生成新的...",
	"kubeadm detected a TCP port conflict with another process: probably another local Kubernetes installation. Run lsof -p\u003cport\u003e to find the process and kill it": "kubeadm 检测一个到与其他进程的 TCP 端口冲突：或许是另外的本地安装的 Kubernetes 导致。执行 lsof -p\u003cport\u003e  查找并杀死这些进程",
	"kubectl and minikube configuration will be stored in {{.home_folder}}": "kubectl 和 minikube 配置将存储在 {{.home_folder}} 中",
	"kubectl not found. If you need it, try: 'minikube kubectl -- get pods -A'": "kubectl 未找到。如果你需要使用它，请尝试：'minikube kubectl -- get pods -A'",
	"kubectl proxy": "kubectl 代理",
	"libmachine failed": "libmachine 失败",
	"list displays all valid default settings for PROPERTY_NAME\nAcceptable fields: \n\n": "list 显示 PROPERTY_NAME 的所有有效默认设置\n可接受的字段：\n\n",
	"list versions of all components included with minikube. (the cluster must be running)": "列出minikube包含的所有组件的版本。（集群必须正在运行）",
	"loading profile": "加载配置文件",
	"max time to wait per Kubernetes core services to be healthy.": "每个 Kubernetes 核心服务保持健康所需的最长时间。",
	"max time to wait per Kubernetes or host to be healthy.": "Kubernetes 或主机正常运行前的最大等待时间。",
	"minikube addons images ADDON_NAME --output OUTPUT. table, json": "",
	"minikube addons list --output OUTPUT. json, list": "minikube addons list --output OUTPUT. json, list",
	"minikube cannot pull kicbase image from any docker registry, and is trying to download kicbase tarball from github release page via HTTP.": "",
	"minikube does not support the BTRFS storage driver yet, there is a workaround, add the following flag to your start command `--feature-gates=\"LocalStorageCapacityIsolation=false\"`": "minikube 尚不支持 BTRFS 存储驱动程序，有一个解决方法，将以下标志添加到你的启动命令 `--feature-gates=\"LocalStorageCapacityIsolation=false\"`",
	"minikube is exiting due to an error. If the above message is not useful, open an issue:": "由于出错 minikube 正在退出。如果以上信息没有帮助，请提交问题反馈：",
	"minikube is missing files relating to your guest environment. This can be fixed by running 'minikube delete'": "Minikube 缺少与客户环境相关的文件。这可以通过运行 'minikube delete' 来修复。",
	"minikube is not meant for production use. You are opening non-local traffic": "minikube 不适用于生产环境。您正在打开非本地流量",
	"minikube is unable to access the Google Container Registry. You may need to configure it to use a HTTP proxy.": "minikube 无法访问 Google 容器仓库。您可能需要将其配置为使用 HTTP 代理。",
	"minikube is unable to connect to the VM: {{.error}}\n\n\tThis is likely due to one of two reasons:\n\n\t- VPN or firewall interference\n\t- {{.hypervisor}} network configuration issue\n\n\tSuggested workarounds:\n\n\t- Disable your local VPN or firewall software\n\t- Configure your local VPN or firewall to allow access to {{.ip}}\n\t- Restart or reinstall {{.hypervisor}}\n\t- Use an alternative --vm-driver\n\t- Use --force to override this connectivity check\n\t": "minikube 无法连接到虚拟机：{{.error}}\n\n\t可能是以下两个原因之一：\n\n\t- VPN 或防火墙干扰\n\t- {{.hypervisor}} 网络配置问题\n\n\t建议解决方法：\n\n\t- 禁用本地 VPN 或防火墙软件\n\t- 配置本地 VPN 或防火墙以允许访问 {{.ip}}\n\t- 重新启动或重新安装 {{.hypervisor}}\n\t- 使用替代 --vm-driver\n\t- 使用 --force 覆盖此连接性检查\n\t",
	"minikube is unable to connect to the VM: {{.error}}\n\nThis is likely due to one of two reasons:\n\n- VPN or firewall interference\n- {{.hypervisor}} network configuration issue\n\nSuggested workarounds:\n\n- Disable your local VPN or firewall software\n- Configure your local VPN or firewall to allow access to {{.ip}}\n- Restart or reinstall {{.hypervisor}}\n- Use an alternative --vm-driver": "minikube 无法连接到虚拟机：{{.error}}\n\n可能是由于以下两个原因之一导致：\n\n-VPN 或防火墙冲突\n- {{.hypervisor}} 网络配置问题\n建议的方案：\n\n- 禁用本地的 VPN 或者防火墙软件\n- 配置本地 VPN 或防火墙软件，放行 {{.ip}}\n- 重启或者重装 {{.hypervisor}}\n- 使用另外的 --vm-driver",
	"minikube mount is not currently implemented with the builtin network on QEMU": "minikube 挂载目前没有在 QEMU 的内置网络中实现",
	"minikube profile was successfully set to {{.profile_name}}": "minikube 配置文件已成功设置为 {{.profile_name}}",
	"minikube provisions and manages local Kubernetes clusters optimized for development workflows.": "minikube 提供并管理针对开发工作流程优化的本地 Kubernetes 集群。",
	"minikube quickly sets up a local Kubernetes cluster": "minikube 可以快速设置本地 Kubernetes 集群",
	"minikube service is not currently implemented with the builtin network on QEMU": "minikube 服务目前未在 QEMU 的内置网络上实现",
	"minikube skips various validations when --force is supplied; this may lead to unexpected behavior": "当提供 --force 参数时，minikube 将跳过各种验证，这可能会导致意外行为",
	"minikube status --output OUTPUT. json, text": "minikube status --output OUTPUT 可以使用 json 或 text 作为输出格式",
	"minikube tunnel is not currently implemented with the builtin network on QEMU": "minikube tunnel 目前还未与QEMU上的内置网络一起实现",
	"minikube {{.version}} is available! Download it: {{.url}}": "minikube {{.version}} 现已发布！下载地址：{{.url}}",
	"mkcmp is used to compare performance of two minikube binaries": "mkcmp 用于对比两个 minikube 二进制的性能",
	"mount argument \"{{.value}}\" must be in form: \u003csource directory\u003e:\u003ctarget directory\u003e": "",
	"mount could not connect": "mount 无法连接",
	"mount failed": "挂载失败",
	"namespaces to pause": "需要暂停的命名空间",
	"namespaces to unpause": "需要取消暂停的命名空间",
	"network to run minikube with. Now it is used by docker/podman and KVM drivers. If left empty, minikube will create a new network.": "运行 minikube 的网络。现在它被 docker/podman 和 KVM 驱动程序使用。如果留空，minikube 将创建一个新的网络。",
	"none driver does not support multi-node clusters": "none 驱动程序不支持多节点集群",
	"not enough arguments ({{.ArgCount}}).\nusage: minikube config set PROPERTY_NAME PROPERTY_VALUE": "参数不足 ({{.ArgCount}}).\nusage: minikube config set PROPERTY_NAME PROPERTY_VALUE",
	"numa node is only supported on k8s v1.18 and later": "numa 节点仅在 k8s v1.18 及更高版本上受支持",
	"output layout (EXPERIMENTAL, JSON only): 'nodes' or 'cluster'": "输出布局（实验性功能，仅限 JSON）：'nodes' 或 'cluster'",
	"pause Kubernetes": "暂停 Kubernetes",
	"pause containers": "暂停容器",
	"powershell completion failed": "powershell 未完成",
	"powershell completion.": "PowerShell 完成。",
	"preload extraction failed: \"No space left on device\"": "预加载提取失败：\"设备上没有剩余空间\"",
	"profile sets the current minikube profile, or gets the current profile if no arguments are provided.  This is used to run and manage multiple minikube instance.  You can return to the default minikube profile by running `minikube profile default`": "profile 命令用于设置当前的 minikube 配置文件，如果没有提供参数，则获取当前配置文件。这用于运行和管理多个 minikube 实例。你可以通过运行 `minikube profile default` 返回默认 minikube 配置文件",
	"provisioning host for node": "正在为节点配置主机",
	"reload cached images.": "重新加载缓存的镜像",
	"reloads images previously added using the 'cache add' subcommand": "重新加载之前通过子命令 'cache add' 添加的镜像",
	"retrieving node": "检索节点",
	"scheduled stop is not supported on the none driver, skipping scheduling": "none 驱动程序不支持计划停止，跳过调度",
	"service not available": "service 不可用",
	"service {{.namespace_name}}/{{.service_name}} has no node port": "service {{.namespace_name}}/{{.service_name}} 没有 NodePort",
	"set tunnel bind address, empty or '*' indicates the tunnel should be available for all interfaces": "设置隧道绑定地址，'' 或 '*' 表示隧道应该对所有接口都可用",
	"socket_vmnet was installed with an incorrect group, delete this cluster 'minikube delete' and update the group 'sudo chown root:$(id -ng) /var/run/socket_vmnet' and try again.": "socket_vmnet 安装时使用了错误的组，请删除此集群 'minikube delete' 并更新组 'sudo chown root:$(id -ng) /var/run/socket_vmnet'，然后重试。",
	"socket_vmnet was not found on the system, resolve by:\n\n\t\tOption 1) Installing socket_vmnet:\n\n\t\t  https://minikube.sigs.k8s.io/docs/drivers/qemu/#networking\n\n\t\tOption 2) Using the user network:\n\n\t\t  minikube start{{.profile}} --driver qemu --network user": "在系统上找不到 socket_vmnet，请通过以下方法解决：\n\n\t\t选项 1) 安装 socket_vmnet：\n\n\t\t  https://minikube.sigs.k8s.io/docs/drivers/qemu/#networking\n\n\t\t选项 2) 使用用户网络：\n\n\t\t  minikube start{{.profile}} --driver qemu --network user",
	"stat failed": "stat 失败",
	"status json failure": "json 状态错误",
	"status text failure": "text 状态错误",
	"too many arguments ({{.ArgCount}}).\nusage: minikube config set PROPERTY_NAME PROPERTY_VALUE": "参数过多（{{.ArgCount}}）。\n用法：minikube config set PROPERTY_NAME PROPERTY_VALUE",
	"true": "true",
	"tunnel creates a route to services deployed with type LoadBalancer and sets their Ingress to their ClusterIP. for a detailed example see https://minikube.sigs.k8s.io/docs/tasks/loadbalancer": "tunnel 创建到以 LoadBalancer 类型部署的服务的路由中，并将其入口设置为其 ClusterIP。有关详细示例，请参阅 https://minikube.sigs.k8s.io/docs/tasks/loadbalancer",
	"tunnel makes services of type LoadBalancer accessible on localhost": "隧道使本地主机上可以访问 LoadBalancer 类型的服务",
	"unable to bind flags": "无法绑定标注",
	"unable to daemonize: {{.err}}": "无法进行后台处理: {{.err}}",
	"unable to delete minikube config folder": "无法删除 minikube 配置目录",
	"unpause Kubernetes": "恢复 Kubernetes",
	"unset failed": "设置失败",
	"unsets PROPERTY_NAME from the minikube config file.  Can be overwritten by flags or environmental variables": "从 minikube 配置文件中取消设置 PROPERTY_NAME。可以通过标志或环境变量进行覆盖",
	"unsets an individual value in a minikube config file": "从 minikube 配置文件中取消设置单个值",
	"unsupported or missing driver: {{.name}}": "不支持或者缺失驱动：{{.name}}",
	"update config": "更新配置",
	"usage: minikube addons configure ADDON_NAME": "用法: minikube addons configure ADDON_NAME",
	"usage: minikube addons disable ADDON_NAME": "用法: minikube addons disable ADDON_NAME",
	"usage: minikube addons enable ADDON_NAME": "用法: minikube addons enable ADDON_NAME",
	"usage: minikube addons images ADDON_NAME": "用法: minikube addons images ADDON_NAME",
	"usage: minikube addons list": "用法: minikube addons list",
	"usage: minikube addons open ADDON_NAME": "用法: minikube addons open ADDON_NAME",
	"usage: minikube config list PROPERTY_NAME": "用法: minikube config list PROPERTY_NAME",
	"usage: minikube config unset PROPERTY_NAME": "用法: minikube config unset PROPERTY_NAME",
	"usage: minikube delete": "用法: minikube delete",
	"usage: minikube profile [MINIKUBE_PROFILE_NAME]": "用法: minikube profile [MINIKUBE_PROFILE_NAME]",
	"version json failure": "json 版本错误",
	"version yaml failure": "yaml 版本错误",
	"yaml encoding failure": "yaml 编码失败",
	"zsh completion failed": "zsh 自动补全失败",
	"zsh completion.": "zsh 自动补全。",
	"{{ .name }}: Suggestion: {{ .suggestion}}": "{{ .name }}：建议：{{ .suggestion }}",
	"{{.Driver}} is currently using the {{.StorageDriver}} storage driver, consider switching to overlay2 for better performance": "{{.Driver}} 当前正在使用 {{.StorageDriver}} 存储驱动程序，请考虑切换到 overlay2 以获得更好的性能",
	"{{.Driver}} is currently using the {{.StorageDriver}} storage driver, setting preload=false": "{{.Driver}} 当前正在使用 {{.StorageDriver}} 存储驱动, 设置 preload=false",
	"{{.addon}} does not currently have an associated maintainer.": "{{.addon}} 目前没有相关的维护者。",
	"{{.addon}} is a 3rd party addon and is not maintained or verified by minikube maintainers, enable at your own risk.": "{{.addon}} 是第三方插件，不由 minikube 维护者进行维护或验证，启用需自担风险。",
	"{{.addon}} is an addon maintained by {{.maintainer}}. For any concerns contact minikube on GitHub.\nYou can view the list of minikube maintainers at: https://github.com/kubernetes/minikube/blob/master/OWNERS": "{{.addon}} 是由 {{.maintainer}} 维护的插件。如有任何问题，请在 GitHub 上联系 minikube。\n您可以在以下链接查看 minikube 的维护者列表：https://github.com/kubernetes/minikube/blob/master/OWNERS",
	"{{.addon}} is maintained by {{.maintainer}} for any concerns contact {{.verifiedMaintainer}} on GitHub.": "{{.addon}} 由 {{.maintainer}} 维护，如有任何问题，请在 GitHub 上联系 {{.verifiedMaintainer}}。",
	"{{.count}} node{{if gt .count 1}}s{{end}} stopped.": "{{.count}} 个节点已停止。",
	"{{.driver_name}} \"{{.cluster}}\" {{.machine_type}} is missing, will recreate.": "{{.driver_name}} \"{{.cluster}}\" 缺失 {{.machine_type}}，将重新创建。",
	"{{.driver_name}} couldn't proceed because {{.driver_name}} service is not healthy.": "由于 {{.driver_name}} 服务不健康，{{.driver_name}} 无法继续进行。",
	"{{.driver_name}} has less than 2 CPUs available, but Kubernetes requires at least 2 to be available": "{{.driver_name}} 可用 CPU 数量不足 2 个，但 Kubernetes 要求至少有 2 个可用 CPU",
	"{{.driver_name}} has only {{.container_limit}}MB memory but you specified {{.specified_memory}}MB": "{{.driver_name}} 只有 {{.container_limit}}MB 内存可用，但您指定了 {{.specified_memory}}MB",
	"{{.driver}} does not appear to be installed": "似乎并未安装 {{.driver}}",
	"{{.driver}} does not appear to be installed, but is specified by an existing profile. Please run 'minikube delete' or install {{.driver}}": "似乎并未安装 {{.driver}}，但已被当前的配置文件指定。请执行 'minikube delete' 或者安装 {{.driver}}",
	"{{.driver}} only has {{.size}}MiB available, less than the required {{.req}}MiB for Kubernetes": "{{.driver}} 仅有 {{.size}}MiB 可用，少于 Kubernetes 所需的 {{.req}}MiB",
	"{{.env}}={{.value}}": "",
	"{{.name}} doesn't have images.": "{{.name}} 没有镜像",
	"{{.name}} has following images:": "{{.name}} 有以下镜像",
	"{{.name}} has no available configuration options": "{{.name}} 没有可用的配置选项",
	"{{.name}} has the following images:": "",
	"{{.name}} is already running": "{{.name}} 已经在运行",
	"{{.name}} was successfully configured": "{{.name}} 成功配置",
	"{{.n}} is nearly out of disk space, which may cause deployments to fail! ({{.p}}% of capacity). You can pass '--force' to skip this check.": "{{.n}} 的磁盘空间即将耗尽，可能导致部署失败！（已使用容量的{{.p}}%）。您可以传递 '--force' 参数来跳过此检查。",
	"{{.n}} is out of disk space! (/var is at {{.p}}% of capacity). You can pass '--force' to skip this check.": "{{.n}} 的磁盘空间已满！（/var 目录已使用 {{.p}}% 的容量）。您可以传递 '--force' 参数跳过此检查。",
	"{{.ociBin}} rmi {{.images}}": "{{.ociBin}} rmi {{.images}}",
	"{{.ocibin}} is taking an unusually long time to respond, consider restarting {{.ocibin}}": "{{.ocibin}} 的响应时间过长，请考虑重新启动 {{.ocibin}}",
	"{{.path}} is version {{.client_version}}, and is incompatible with Kubernetes {{.cluster_version}}. You will need to update {{.path}} or use 'minikube kubectl' to connect with this cluster": "{{.path}} 的版本是 {{.client_version}}，且与 Kubernetes {{.cluster_version}} 不兼容。您需要更新 {{.path}} 或者使用 'minikube kubectl' 连接到这个集群",
	"{{.path}} is version {{.client_version}}, which may have incompatibilities with Kubernetes {{.cluster_version}}.": "{{.path}} 的版本为 {{.client_version}}，可能与 Kubernetes {{.cluster_version}} 不兼容。",
	"{{.prefix}}minikube {{.version}} on {{.platform}}": "{{.platform}} 上的 {{.prefix}}minikube {{.version}}",
	"{{.profile}} profile is not valid: {{.err}}": "{{.profile}} 配置文件无效：{{.err}}",
	"{{.type}} is not yet a supported filesystem. We will try anyways!": "{{.type}} 还不是一个受支持的文件系统。无论如何我们都会尝试！",
	"{{.url}} is not accessible: {{.error}}": "{{.url}} 不可访问：{{.error}}"
}
